LIB "teachstd.lib";
option(redSB);
ring R=0, (x,y), dp;

poly f = 2+5*x^2*y+7*x*y^2;
poly g = 11*x+13*x^4+17*x^2*y^2;
short=0;
f;
g;

printf(" Lead term of f %s  Lead term of g is %s", lead(f), lead(g));
poly h = 13*x^2*f-5*y*g;
printf(" Here is their S-polynomial, h=%s",h);
printf(" Lead term of h %s, which is divisible by the lead term of f", lead(h));
h = 5*h - 91*f*x*y;
printf(" Replace h by its reduction modulo f, to get h=%s",h);
h = 5*h + 1062*f*y^2;
printf(" Another reduction is possible, and we get h=%s",h);
printf(" ");

printf(" Now we have leading terms of f, g, and h are %s, %s, %s", lead(f), lead(g), lead(h));
printf(" ");

poly k = 7434*y^3*f-5*x*h;
printf(" Here is the S-polynomial of f and h, k=%s",k);
 k = (k-7*y*h)/125;
printf(" We can divide k by h (and then by 125) to get  k=%s",k);
g = (2*g+x*k)/11;
printf(" The leading term of k divides that of g");
printf("    Let's reduce g by k and divide by 11 to get g=%s",g);
printf(" But this is x*f, so we remove g from our putative Groebner basis");
g-x*f;
printf(" ");
printf(" Now we have leading terms of f, h, andk are %s, %s, %s", lead(f), lead(h), lead(k));
printf(" ");

printf(" Please finish this run through Buchberger's algorithm by hand. ");
printf(" Explore the functions in the library teachstd.lib");


quit;




std(ideal(f,g));
quit;
