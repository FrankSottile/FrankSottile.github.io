#equations.maple
#
# Frank Sottile
# 29 October 2000
# Amherst, MA
#
# This script computes polynomials approximating the 5 solutions
# to the equations giving maximally inflected quartic plane curves
# with inflection points at 0, -3, -1, 1, 3, and S, where
# S ranges from 0 to 2.5
#
#  For the fifth solution, there is a problem as the A-solution
#  goes to infinity as S --> 0, so I compute A*C, A*D, and A*E,
#  in that case, which are what is used in the rational curve.
#
#  The output is printed to data.maple, and it will be used in 
# collide.maple
#
kernelopts(gcfreq=10000000):
with(stats):
with(plots):
Digits:=60:
plotsetup(x11,plotoptions=`width=3in,height=4in`):

E:=linalg[det](linalg[matrix]([
 [1, s, s^2,  s^3,  s^4],
 [0, 1,2*s ,3*s^2,4*s^3],
 [0, 0, 1  ,3*s  ,6*s^2],
 [1, a, b  ,  0  ,  0  ],
 [0, 1, c  ,  d  ,  e  ]]))/s:

# The ideal 
#lprint(subs(s=-3,E),`,`);
#lprint(subs(s=-1,E),`,`);
#lprint(subs(s=1,E),`,`);
#lprint(subs(s=3,E),`,`);
#lprint(simplify(E),`;`);
#
# Lexicographic Groebner basis for the ideal
#

Beq:=(160*s^2-1152)*b^5+(48*s^2+4800)*b^4+(-720*s^2-3936)*b^3+(-216*s^2-2160)*b^2+(810*s^2)*b+(243*s^2):
Aeq:=(3456*s)*a+(400*s^2-2880)*b^4+(480*s^2+9408)*b^3+(-792*s^2-5520)*b^2+(-1080*s^2-3456)*b+(-243*s^2):
Deq:=5184*d+(-400*s^2+2880)*b^4+(-480*s^2-9408)*b^3+(792*s^2+5520)*b^2+(1080*s^2-6912)*b+(243*s^2+17280):
Eeq:=(81*s)*e+(160*s^2-1152)*b^4+(48*s^2+4800)*b^3+(-720*s^2-3936)*b^2+(-216*s^2-2160)*b+(810*s^2):

Var:=[]:
Asols:=[[],[],[],[],[]]:
Bsols:=[[],[],[],[],[]]:
Dsols:=[[],[],[],[],[]]:
Esols:=[[],[],[],[],[]]:
ACsols:=[]:
ADsols:=[]:
AEsols:=[]:


#i=5 and A-SOLUTION
Var:=[.0001,.001,.0005,.01,.02,.04,.06]:
epsilon:=.0001:
Steps:=20:
for St from 1 to 5/2*Steps do
 Ss:=St/Steps+epsilon:
 Var:=[Var[],Ss]:
od:
for Ss in Var do
 Bb:=[fsolve(subs(s=Ss,Beq)=0,b)]:
 for i from 1 to nops(Bb) do
#  Bsols[i]:=[Bsols[i][],Bb[i]]:
#  Asols[i]:=[Asols[i][],fsolve(subs(s=Ss,b=Bb[i],Aeq)=0,a,fulldigits)]:
#  Dsols[i]:=[Dsols[i][],fsolve(subs(s=Ss,b=Bb[i],Deq)=0,d)]:
#  Esols[i]:=[Esols[i][],fsolve(subs(s=Ss,b=Bb[i],Eeq)=0,e)]:
 od:
 ACsols:=[ACsols[],fsolve(subs(s=Ss,b=Bb[5],Aeq)=0,a,fulldigits)*Ss/3]:
 ADsols:=[ADsols[],fsolve(subs(s=Ss,b=Bb[5],Aeq)=0,a,fulldigits)*fsolve(subs(s=Ss,b=Bb[5],Deq)=0,d)]:
 AEsols:=[AEsols[],fsolve(subs(s=Ss,b=Bb[5],Aeq)=0,a,fulldigits)*fsolve(subs(s=Ss,b=Bb[5],Eeq)=0,e)]:
od:
 
AEq:=[0,0,0,0,0]:
BEq:=[0,0,0,0,0]:
CEq:=[0,0,0,0,0]:
DEq:=[0,0,0,0,0]:
EEq:=[0,0,0,0,0]:
 ACEq:=op(2,fit[leastsquare[[S,y],y=aA+bB*S+cC*S^2+dD*S^3+eE*S^4+f*S^5+g*S^6+h*S^7+k*S^8+l*S^9+m*S^10+aa*S^11+bb*S^12+cc*S^13]]([Var,ACsols])):
 ADEq:=op(2,fit[leastsquare[[S,y],y=aA+bB*S+cC*S^2+dD*S^3+eE*S^4+f*S^5+g*S^6+h*S^7+k*S^8+l*S^9+m*S^10+aa*S^11+bb*S^12+cc*S^13]]([Var,ADsols])):
 AEEq:=op(2,fit[leastsquare[[S,y],y=aA+bB*S+cC*S^2+dD*S^3+eE*S^4+f*S^5+g*S^6+h*S^7+k*S^8+l*S^9+m*S^10+aa*S^11+bb*S^12+cc*S^13]]([Var,AEsols])):

lprint(`ACeq:=`,ACEq,`:`);
lprint(`ADeq:=`,ADEq,`:`);
lprint(`AEeq:=`,AEEq,`:`);
quit;

for i from 5 to 5 do
# A1Eq[i]:=op(2,fit[leastsquare[[S,y],y=xX/S^3+yY/S^2+zZ/S+aA+bB*S+cC*S^2+dD*S^3+eE*S^4+f*S^5+g*S^6+h*S^7+k*S^8+l*S^9+m*S^10+aa*S^11+bb*S^12+cc*S^13+dd*S^14]]([Var,Asols[i]])):
# AEq[i]:=op(2,fit[leastsquare[[S,y],y=wW/S^4+xX/S^3+yY/S^2+zZ/S+aA+bB*S+cC*S^2+dD*S^3+eE*S^4+f*S^5+g*S^6+h*S^7+k*S^8+l*S^9+m*S^10+aa*S^11+bb*S^12+cc*S^13+dd*S^14+ee*S^15+ff*S^16+gg*S^17+hh*S^18+ii*S^19]]([Var,Asols[i]])):
# BEq[i]:=op(2,fit[leastsquare[[S,y],y=aA+bB*S+cC*S^2+dD*S^3+eE*S^4+f*S^5+g*S^6+h*S^7+k*S^8+l*S^9+m*S^10+aa*S^11+bb*S^12+cc*S^13]]([Var,Bsols[i]])):
 CEq[i]:=S/3:
# DEq[i]:=op(2,fit[leastsquare[[S,y],y=aA+bB*S+cC*S^2+dD*S^3+eE*S^4+f*S^5+g*S^6+h*S^7+k*S^8+l*S^9+m*S^10+aa*S^11+bb*S^12+cc*S^13]]([Var,Dsols[i]])):
# EEq[i]:=op(2,fit[leastsquare[[S,y],y=aA+bB*S+cC*S^2+dD*S^3+eE*S^4+f*S^5+g*S^6+h*S^7+k*S^8+l*S^9+m*S^10+aa*S^11+bb*S^12+cc*S^13]]([Var,Esols[i]])):
od:
#plotsetup(x11,plotoptions=`width=3in,height=4in`):

P:=[]:Q:=[]:
for j from 1 to nops(Var) do 
# P:=[P[],[Var[j],Esols[5][j]]]:
 Q:=[Q[],[Var[j],ACsols[j]-Asols[5][j]*Var[j]/3]]:
 P:=[P[],[Var[j],Asols[5][j]*Var[j]/3]]:
od:

#A:=plot({[S,ACEq-AEq[5]*S/3,S=0.1..2.2]},numpoints=100):
B:=pointplot({Q[]},symbol=circle,color=black):
display(B);

