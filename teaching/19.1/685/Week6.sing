//Week6.sing
//
// This walks you through Exercise 1, Section 2.3 of IVA
//  
//
LIB "teachstd.lib";
option(redSB);
ring R=0, (x,y,z), dp;
ring S=0, (x,y,z), lp;
printf("The rings R and S differ only in their monomial orderings");
printf("Let us look at R");
R;
printf("Let us look at S");
S;

printf("We work first in ring R, defining three polynomials in Exercise 1");
setring R;
poly f,F,G, r,s;
f = x^7*y^2 + x^3*y^2 - y +1;
F = x*y^2-x;
G = x - y^2;
printf("Here are f, F, and G");
short=0;
printf("f = %s, F = %s, G = %s",f,F,G);
printf("Notice that %s is the leading term of F  and %s is the leading term of G",lead(F),lead(G));
printf(" x^6*F has the same leading term as f, call r = f- x^6*F");
r = f - x^6*F;
r;
printf("The second term, x^3*y^2, of r is divisible by the leading term of F.  We reduce it");
poly rFG = r - x^2*F;
rFG;
printf("Now there are no more divisions possible.");
printf("We have found that f = (x^6+x^2)*F + r, where r = %s",rFG);
printf("");
printf("Let us keep the same ring, but switch the order of F and G for the division.");
printf("We reduce f = %s  with respect to G, r = f + x^7*G ",f);
r = f + x^7*G;
r;
printf("The second term, x^3*y^2, of r is divisible by G.  r = r + x^3*G ");
poly rGF = r + x^3*G;
rGF;
printf("Now there are no more divisions possible.");
printf("We have found that f = -(x^7 + x^3)*G + r, where r = %s",rGF);
printf("");
printf("");
printf("The multivariate division algorithm behaves differenty if the order of F and G is reversed");
printf("Order F, G, remainder is %s",rFG);
printf("Order G, F, remainder is %s",rGF);
printf("///////////////////////////////////////////////////////////////////////////////////");
printf("");
printf("Let us set the ring to be S.");
printf("Note that we have to redefine the polynomials, as we are now in a different ring");
setring S;
poly f,F,G,r,s;
f = x^7*y^2 + x^3*y^2 - y +1;
F = x*y^2-x;
G = x - y^2;
short=0;
printf("Let us look at what the lexicographic term order does to f, F, and G. (Note the difference for G).");
printf("f = %s, F = %s, G = %s",f,F,G);
printf("We have the same division as before for f and F:  r = f - x^6*F");
r = f - x^6*F;
r;
printf("The leading term is divisible by G and not F, r = r - x^6*G;");
r = r - x^6*G;
r;
printf("Now we may reduce w.r.t. F: r = r - x^5*F;");
r = r - x^5*F;
r;
printf("...and then G: r = r - x^5*G;");
r = r - x^5*G;
r;
printf("...and then F: r = r - x^4*F;");
r = r - x^4*F;
r;
printf("...and then G: r = r - x^4*G;");
r = r - x^4*G;
r;
printf("...and then F: r = r - x^3*F;");
r = r - x^3*F;
r;
printf("...and then G: r = r - x^3*G;");
r = r - x^3*G;
r;
printf("...and then F: r = r - 2*x^2*F;");
r = r - 2*x^2*F;
r;
printf("...and then G: r = r - 2*x^2*G;");
r = r - 2*x^2*G;
r;
printf("...and then F: r = r - 2*x*F;");
r = r - 2*x*F;
r;
printf("...and then G: r = r - 2*x*G;");
r = r - 2*x*G;
r;
printf("...and then F: r = r - 2*F;");
r = r - 2*F;
r;
printf("...and then G: r = r - 2*G;");
poly rFG = r - 2*G;
rFG;
printf("This cannot be reduced further. (It was a bit tedious)");
printf("We have found that");
printf("   f = (x^6+x^5+x^4+x^3+2*x^2+2*x+2)*F + (x^6+x^5+x^4+x^3+2*x^2+2*x+2)*G + r,");
printf("where r = %s",rFG);
printf("");
printf("Let us try reductions with the order of F and G reversed.");
printf("f = %s, F = %s, G = %s",f,F,G);
printf("We can reduce f using G:   r = f - x^6*y^2*G");
r = f - x^6*y^2*G;
r;
printf("We can reduce f using G:   r = r - x^5*y^4*G");
r = r - x^5*y^4*G;
r;
printf("We can reduce f using G:   r = r - x^4*y^6*G");
r = r - x^4*y^6*G;
r;
printf("We can reduce f using G:   r = r - x^3*y^8*G");
r = r - x^3*y^8*G;
r;
printf("We can reduce f using G:   r = r - x^2*y^10*G");
r = r - x^2*y^10*G;
r;
printf("We can reduce f using G:   r = r - x^2*y^2*G");
r = r - x^2*y^2*G;
r;
printf("We can reduce f using G:   r = r - x*y^12*G");
r = r - x*y^12*G;
r;
printf("We can reduce f using G:   r = r - x*y^4*G");
r = r - x*y^4*G;
r;
printf("We can reduce f using G:   r = r - y^14*G");
r = r - y^14*G;
r;
printf("We can reduce f using G:   r = r - y^6*G");
poly rGF = r - y^6*G;
rGF;
printf("This cannot be reduced further. (It was again, a bit tedious)");
printf("We have found that");
printf("   f = 0*F + (x^6*y^2+x^5*y^4+x^4*y^6+x^3*y^8+x^2*y^10+x^2*y^2+x*y^12+x*y^4+y^14+y^6)*G + r,");
printf("where r = %s",rGF);
printf("");
printf("Again, the multivariate division algorithm behaves differenty if the order of F and G ois reversed");
printf("Order F, G, remainder is %s",rFG);
printf("Order G, F, remainder is %s",rGF);
quit;

