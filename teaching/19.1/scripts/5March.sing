//Reality.sing
//
// Frank Sottile
// 5 March 2019
//////////////////////////////////////////////////////////////////////////////////////////
//
//   This script is a framework for investigating the reality of solutions 
//     to sparse systems.
//
//////////////////////////////////////////////////////////////////////////////////////////
LIB "matrix.lib"; 
LIB "linalg.lib"; 
LIB "rootsur.lib";
option(redSB);
//
system("random",1009);  // start random generator with seed 1009

int numMonoms = 5;
intmat A[2][numMonoms] = 0,2,0, 1, 2,
                         0,0,2, 1, 2;

ring S = 101, (x,y), lp;
ring R = 0, (x,y), lp;

poly f,F,P;
int i,j,ii;
ideal I,B;

for (ii=1; ii<=10; ii=ii+1) {
 setring R;
 I=0;
 for (j=1;  j<=2; j=j+1) {
  f=0;
  for (i=1; i<=numMonoms; i=i+1) {
   f = f +  random(-100,100)*x^A[1,i]*y^A[2,i];
  }
   short=0;
//   f;
  I = I + ideal(f);
 }

 short=0;

// print("/////////////////////////////////////////////////");
 I=std(I);
// I;
// dim(I), mult(I);
 B= kbase(I); 
 F= charpoly(coeffs(reduce(var(nvars(R))*B,I),B), varstr(nvars(R)));
// F;
 P=eliminate(I,x)[1];
// P;
// nrroots(F),nrroots(I[1]),nrroots(P);
 setring(S);
 factorize(imap(R,F),2);
}

quit;
setring(R);
intvec NROOTS=0,0,0,0,0,0,0,0,0;
int L;

for (ii=1; ii<=100; ii=ii+1) {
 I=0;
 for (j=1;  j<=2; j=j+1) {
  f=0;
  for (i=1; i<=numMonoms; i=i+1) {
   f = f +  random(-100,100)*x^A[1,i]*y^A[2,i];
  }
  I = I + ideal(f);
 }
 L = nrroots(eliminate(I,x)[1]);
 NROOTS[L+1] = NROOTS[L+1]+1;
}

NROOTS;
quit;



