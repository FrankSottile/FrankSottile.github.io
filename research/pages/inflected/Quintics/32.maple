#32.maple
#
# Frank Sottile
# 13 August 2001
# Amherst, Mass
#
# Here, we compute and draw the maximally inflected quintics with 
# a ramification of type (3,2).  (index = (0,3,5).)
#
#  By the genus formula, there will be at most 2 nodes
#
#
interface(quiet=true):
with(plots):
with(Groebner):
Digits:=12:

#####################################################################
#  Here are procedures for computing the equations
#
#1  [1,0, 0 , a   ,  d  ,  g   ],
#2  [0,1, 0 , b   ,  e  ,  h   ],
#3  [0,0, 1 , c   ,  f  ,  i   ],
#4  [1,s,s^2,  s^3,s^4  ,   s^5],
#5  [0,1,2*s,3*s^2,4*s^3, 5*s^4],
#6  [0,0, 1 ,3*s  ,6*s^2,10*s^3],
#7  [0,0, 0 , 1   ,4*s  ,10*s^2],
#8  [0,0, 0 , 0   , 1   , 5*s  ]]):    
#

Flex := proc(M,x)
#
#  Computes the equation of codimension 1, a flex
#
 primpart(subs(s=x,linalg[det](linalg[submatrix](M,[1,2,3,4,5,6],[1,2,3,4,5,6]))))
end:

###############################################

Cusp := proc(M,x)
#
#  Computes the equation of type 11, cusp
#  Takes a matrix with 7 rows
#
 local L, EQS, COLS:
 EQS:=[]:
 for COLS in combinat[choose]([1,2,3,4,5,6],5) do
  EQS:=[EQS[],
      primpart(subs(s=x,linalg[det](linalg[submatrix](M,[1,2,3,4,5],COLS))))]:
 od:
 convert(convert(EQS,set),list)
end:

#########################################################
Planar := proc(M,x)
#
#  Computes the equation of type 2, a planar point
#
 local EQS, ROWS:
 EQS:=[]:
 for ROWS in combinat[choose]([1,2,3,4,5,6,7],6) do
  EQS:=[EQS[],
      primpart(subs(s=x,linalg[det](linalg[submatrix](M,ROWS,[1,2,3,4,5,6]))))]:
 od:
 convert(convert(EQS,set),list)
end:

##########################################################

Claw := proc(M,x)
#
#  Computes the equation of type 21, a claw
#
 [Planar(M,x)[],Cusp(M,x)[]]
end:

FlFl := proc(BM,x)
#
#  Computes the equation of type 3  (flat flex)
#
#
 local EQS, ROWS:
 EQS:=[]:
 for ROWS in combinat[choose]([1,2,3,4,5,6,7,8],6) do
  EQS:=[EQS[],
      primpart(subs(s=x,linalg[det](linalg[submatrix](BM,ROWS,[1,2,3,4,5,6]))))]:
 od:
 convert(convert(EQS,set),list)
end:

########################################################################
Box := proc(BM,x)
#
#  Computes the equation of type 22  (box flex)
#
 local EQS, ROWS, COLS:
 EQS:=[]:
 for ROWS in combinat[choose]([1,2,3,4,5,6],5) do
 for COLS in combinat[choose]([1,2,3,4,5,6],5) do
  EQS:=[EQS[],
      primpart(subs(s=x,linalg[det](linalg[submatrix](BM,ROWS,COLS))))]:
 od: od:
 convert(convert(EQS,set),list)
end:

##########################################
Double := proc(x,y,z)
#
#  Computes the double points, given the parameterization
#
 local G;
 G:=Groebner[gbasis]([
 simplify((subs(t=1,x)*subs(s=t,subs(t=1,y))-
           subs(t=1,y)*subs(s=t,subs(t=1,x)))/(s-t)), 
 simplify((subs(t=1,x)*subs(s=t,subs(t=1,z))-
           subs(t=1,z)*subs(s=t,subs(t=1,x)))/(s-t)),
 simplify((subs(t=1,z)*subs(s=t,subs(t=1,y))-
           subs(t=1,y)*subs(s=t,subs(t=1,z)))/(s-t))
 ],plex(s,t));
 [fsolve(G[1]=0,t,complex)]
end:


 factor(primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,y))-
           subs(t=1,y)*subs(s=t,subs(t=1,x)))/(s-t)))), 
 factor(primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,z))-
           subs(t=1,z)*subs(s=t,subs(t=1,x)))/(s-t)))),
 factor(primpart(simplify((subs(t=1,z)*subs(s=t,subs(t=1,y))-
           subs(t=1,y)*subs(s=t,subs(t=1,z)))/(s-t))));

plotsetup(x11,plotoptions=`width=3in,height=2.5in`):

RatNorm:=linalg[vector]([1,s,s^2,s^3,s^4,s^5  ]):

############################################################################

M:=linalg[matrix]([
[a,1, 0 , 0   ,  0  ,  0   ],
[b,0, 1 , 0   ,  0  ,  0   ],
[c,0, 0 , d   ,  1  ,  0   ],
[1,s,s^2,  s^3,s^4  ,   s^5],
[0,1,2*s,3*s^2,4*s^3, 5*s^4],
[0,0, 1 ,3*s  ,6*s^2,10*s^3],
[0,0, 0 , 1   ,4*s  ,10*s^2],
[0,0, 0 , 0   , 1   , 5*s  ]]):    
#
#
#   Coordinates for the first three
#
#linalg[kernel](linalg[matrix]([
#[1,a, 0 , 0   ,  0  ,  0   ],
#[0,1, b , 0   ,  0  ,  0   ],
#[0,0, 1 , c   ,  d  ,  0   ]]));
#{[-a b d, b d, -d, 0, 1, 0], [0, 0, 0, 0, 0, 1], [-a b c, b c, -c, 1, 0, 0]}

#linalg[kernel](linalg[matrix]([
#[a,1, 0 , 0   ,  0  ,  0   ],
#[b,0, 1 , 0   ,  0  ,  0   ],
#[c,0, 0 , d   ,  1  ,  0   ]]));
#{[-1, a, b, 0, c, 0], [0, 0, 0, 0, 0, 1], [0, 0, 0, 1, -d, 0]}


#####################################################################
#
#  31:  One curve.  by genus formula, no nodes.
#
#G:=Groebner[gbasis]([FlFl(M,1)[],Cusp(M,1)[]],plex(a,b,c,d)):
#Dd:=solve(G[1]=0,d):C:=solve(G[2]=0,c):
#B:=solve(G[3]=0,b): A:=solve(G[4]=0,a):
#y:=linalg[multiply](vector([-1, A, B, 0,  C, 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd, 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
#X:=x/(y-2*z):    Y:=y/(y-2*z):
#Xx:=simplify(X+0.1):
#Z1:=fsolve(Xx=0,s):
#X:=X/Xx: Y:=Y/Xx:
#X1:=X: Y1:=Y+11.35*X:
#Xx:=simplify(X-0.04):
#Z:=fsolve(Xx=0,s);
#X:=X/Xx: Y:=Y/Xx: Y:=Y-223*X+250:
#
#Xt:=subs(s=1/t,X):Yt:=subs(s=1/t,Y):
#P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
#Q:=plot({[X,Y,s=-1..Z-0.1],[X,Y,s=Z+0.09..1],
#         [Xt,Yt,t=-1..1]},numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.31.a.gif`,plotoptions=`height=180,width=180`):
#display(Q,P);
#
#  A different picture
#
#Xt:=subs(s=1/t,X1):Yt:=subs(s=1/t,Y1):
#P:=pointplot([subs(s=0,X1),subs(s=0,Y1)],symbol=circle,color=maroon):
#Q:=plot({[X1,Y1,s=-1..Z1-0.04],[X1,Y1,s=Z1+0.04..1],
#         [Xt,Yt,t=-1..1]},numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.31.b.gif`,plotoptions=`height=180,width=180`):
#display(Q,P);
#############################################

#####################################################################
#
#  21,1:  One curve.  by genus formula, no nodes.
#
#G:=Groebner[gbasis]([Claw(M,1)[],Flex(M,-1)],plex(a,b,c,d)):
#Dd:=solve(G[1]=0,d):C:=solve(G[2]=0,c):
#B:=solve(G[3]=0,b): A:=solve(G[4]=0,a):
#y:=linalg[multiply](vector([-1, A, B, 0,  C, 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd, 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
#q:=10:r:=1:
#fsolve(subs(t=1,q*y+r*z)=0,s,complex);
#X:=-x/(q*y+r*z):   Y:=z/(q*y+r*z):
#P:=pointplot([subs(t=1,s=0,X),subs(t=1,s=0,Y)],symbol=circle,color=maroon):
#Pp:=pointplot([subs(t=1,s=-1,X),subs(t=1,s=-1,Y)],symbol=circle,color=red):
#Q:=plot({[X,Y,s=-4..7]},numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.21.1.gif`,plotoptions=`height=180,width=180`):
#display(Q,P,Pp);

#####################################################################
#
#  3,1:  One curve.  By genus formula, two nodes.
#
#G:=Groebner[gbasis]([FlFl(M,1)[],Flex(M,2)],plex(a,b,c,d)):
#Dd:=solve(G[1]=0,d):C:=solve(G[2]=0,c):
#B:=solve(G[3]=0,b): A:=solve(G[4]=0,a):
#y:=linalg[multiply](vector([-A*B*Dd, B*Dd, -Dd, 0, 1, 0]),RatNorm):
#z:=linalg[multiply](vector([-A*B*C , B*C , -C , 1, 0, 0]),RatNorm):
#x:=linalg[multiply](vector([0, 0, 0, 0, 0, 1]),RatNorm):
#
#double:=Double(x,y,z);lprint(double);
#double:=[.3628143464+.6699766446*I, 1.344502727-.5861030460*I]:
#q:=2:r:=-5:
#fsolve(subs(t=1,q*y+r*z)=0,s,complex);
#X:=x/(q*y+r*z):   Y:=z/(q*y+r*z):
#P:=pointplot([subs(t=1,s=0,X),subs(t=1,s=0,Y)],symbol=circle,color=maroon):
#Pp:=pointplot([subs(t=1,s=2,X),subs(t=1,s=2,Y)],symbol=circle,color=red):
#Ppp:=pointplot([subs(t=1,s=1,X),subs(t=1,s=1,Y)],symbol=circle,color=magenta):
#Q:=plot({[X,Y,s=-4..7]},numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.3.1.gif`,plotoptions=`height=180,width=180`):
#Dp:=pointplot({[Re(subs(t=1,s=double[1],X)),Re(subs(t=1,s=double[1],Y))],
#               [Re(subs(t=1,s=double[2],X)),Re(subs(t=1,s=double[2],Y))]},
#                symbol=circle,color=blue):
#display(Q,P,Pp,Ppp,Dp);

#####################################################################
#
#  2,2:  One curve.  By genus formula, two nodes.
#                    By computation, one real and one solitary
#
#G:=Groebner[gbasis]([Planar(M,1)[],Planar(M,-1)[]],plex(a,b,c,d)):
#Dd:=solve(G[1]=0,d):C:=solve(G[2]=0,c):
#B:=solve(G[3]=0,b): A:=solve(G[4]=0,a):
#y:=linalg[multiply](vector([-1, A, B, 0,  C, 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd, 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
##double:=Double(x,y,z):lprint(double);
#double:=[ .868890300722*I, .297159364689]:
#q:=1:r:=0:e1:=.06:e2:=.05:
#X:=x/(q*y+r*z):   Y:=z/(q*y+r*z):
#Yy:=2*Y-X-1/20: 
#X:=X/Yy: Y:=simplify(Y/Yy):
#Yy:=Y+1: 
#X:=simplify(X/Yy): Y:=simplify(Y/Yy):
#Z:=fsolve(op(1,op(3,Y))=0,s):
#X:=simplify(X - subs(s=Z,X)*Y/subs(s=Z,Y)):
#Xx:=X-0.08:
#X:=simplify(X/Xx): Y:=simplify(Y/Xx):
#Z:=fsolve(op(1,op(3,Y))=0,s):
#Y:=Y-X:
#Xt:=simplify(subs(s=1/t,X)):
#Yt:=simplify(subs(s=1/t,Y)):
#P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
#Pp:=pointplot({[subs(s=1,X),subs(s=1,Y)],
#               [subs(s=-1,X),subs(s=-1,Y)]},symbol=circle,color=green):
#Q:=plot({[X,Y,s=-1..Z-e1],[X,Y,s=(Z+e2)..1],[Xt,Yt,t=-1..1]},
#          numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.2e2.gif`,plotoptions=`height=180,width=180`):
#Dp:=pointplot({[Re(subs(s=double[1],X)),Re(subs(s=double[1],Y))]},
#                symbol=circle,color=blue):
#display(Q,P,Pp,Dp);

#####################################################################
#
#  2,11:  One curve.  By genus formula, one node.
#
Digits:=30:
G:=Groebner[gbasis]([Planar(M,1)[],Cusp(M,-1)[]],plex(a,b,c,d)):
Dd:=solve(G[1]=0,d):C:=solve(G[2]=0,c):
B:=solve(G[3]=0,b): A:=solve(G[4]=0,a):
y:=linalg[multiply](vector([-1, A, B, 0,  C, 0]),RatNorm):
z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd, 0]),RatNorm):
x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
double:=-.0476190476190 +.212958855000*I:
q:=1:r:=0:e1:=.2:e2:=.02:
X:=x/(q*y+r*z):   Y:=z/(q*y+r*z):
Yy:=X+Y+1/20:
X:=simplify(X/Yy): Y:=simplify(Y/Yy):
Y:=simplify(Y/(X+1/2)):X:=simplify(X/(X+1/2)):
Z:=fsolve(op(1,op(4,Y))=0,s);
Y:=4.0992*X+Y:
Xt:=simplify(subs(s=1/t,X)):
Yt:=simplify(subs(s=1/t,Y)):
P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
Pp:=pointplot({[subs(s=1,X),subs(s=1,Y)]},symbol=circle,color=green):
Q:=plot({[X,Y,s=-1..(Z-e1)],
         [Xt,Yt,t=-1..1.05]},
          numpoints=100,axes=none,color=blue):
plotsetup(gif,plotoutput=`32.2.11.gif`,plotoptions=`height=180,width=360`):
Dp:=pointplot({[Re(subs(s=double,X)),Re(subs(s=double,Y))]},
                symbol=circle,color=blue):
display(Q,P,Pp,Dp);
#display(Q,P,Pp,Dp,view=[-0.05..0.05,0.1..0.4]);



#####################################################################
#
#  2,1e2:  By genus formula, two nodes.
#
#  There are two kinds: a) 32,2,1,1 or b) 32,1,2,1
#
#   This is a): 32,2,1,1 
#
G:=Groebner[gbasis]([Planar(M,1)[],Flex(M,-3/4),Flex(M,-9/4)],plex(a,b,c,d)):
Dd:=[solve(G[1]=0,d)]:
C:=[solve(G[2]=0,c),solve(G[2]=0,c)]:
B:=[solve(subs(d=Dd[1],G[3])=0,b),solve(subs(d=Dd[2],G[3])=0,b)]: 
A:=[solve(subs(d=Dd[1],G[4])=0,a),solve(subs(d=Dd[2],G[4])=0,a)]:

###          a1  
#
#y:=linalg[multiply](vector([-1, A[1], B[1], 0,  C[1], 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd[1], 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
#G:=Groebner[gbasis]([factor(primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,x)))/(s-t)))), 
# primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,z))-
#           subs(t=1,z)*subs(s=t,subs(t=1,x)))/(s-t)/s^3/t^3)),
# factor(primpart(simplify((subs(t=1,z)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,z)))/(s-t))))],plex(s,t)):
#double:=[fsolve(G[1]=0,t,complex)][4];
#X:=x/y:   Y:=z/y:
#Yy:=-Y+1/20+X/2:
#X:=simplify(X/Yy): Y:=simplify(Y/Yy):
#Xx:=X+0.3:
#X:=simplify(X/Xx): Y:=simplify(Y/Xx):
#X:=X+Y/19:
#Z:=fsolve(op(1,op(4,Y))=0,s):
#e1:=.04:e2:=.03:
#Xt:=simplify(subs(s=1/t,X)):
#Yt:=simplify(subs(s=1/t,Y)):
#P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
#Pp:=pointplot({[subs(s=1,X),subs(s=1,Y)]},symbol=circle,color=green):
#Pf:=pointplot({[subs(s=-3/4,X),subs(s=-3/4,Y)],
#               [subs(s=-9/4,X),subs(s=-9/4,Y)]},symbol=circle,color=red):
#Q:=plot({[X,Y,s=-1..Z-e1],[X,Y,s=Z+e2..1],[Xt,Yt,t=-1..1]},
#          numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.2.1e2.a1.gif`,plotoptions=`height=180,width=180`):
#Dp:=pointplot({[Re(subs(s=double,X)),Re(subs(s=double,Y))]},
#                symbol=circle,color=blue):
#display(Q,P,Pp,Pf,Dp);

########   a2  
#double:=[-.991647 - .53*I, -.0453939 - .23624758*I]:
#
#y:=linalg[multiply](vector([-1, A[2], B[2], 0,  C[2], 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd[2], 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
#G:=Groebner[gbasis]([factor(primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,x)))/(s-t)))), 
# primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,z))-
#           subs(t=1,z)*subs(s=t,subs(t=1,x)))/(s-t)/s^3/t^3)),
# factor(primpart(simplify((subs(t=1,z)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,z)))/(s-t))))],plex(s,t)):
#double:=[fsolve(G[1]=0,t,complex)];
#X:=x/y:   Y:=z/y:
#Yy:=X/2+Y+1/20:
#X:=simplify(X/Yy): Y:=simplify(Y/Yy):
#Z:=fsolve(op(1,op(4,Y))=0,s):
#Y:=0.6216*X+Y:
#Xt:=simplify(subs(s=1/t,X)):
#Yt:=simplify(subs(s=1/t,Y)):
#P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
#Pp:=pointplot({[subs(s=1,X),subs(s=1,Y)]},symbol=circle,color=green):
#Pf:=pointplot({[subs(s=-3/4,X),subs(s=-3/4,Y)],
#               [subs(s=-9/4,X),subs(s=-9/4,Y)]},symbol=circle,color=red):
#Q:=plot({[X,Y,s=-1..1.3],
#         [Xt,Yt,t=-1..-0.2]},#         [Xt,Yt,t=-1/2..1/5]},
#          numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.2.1e2.a2.gif`,plotoptions=`height=180,width=180`):
#Dp:=pointplot({[Re(subs(s=double[1],X)),Re(subs(s=double[1],Y))],
#               [Re(subs(s=double[3],X)),Re(subs(s=double[3],Y))]},
#                symbol=circle,color=blue):
#display(Q,P,Pp,Pf,Dp);
#display(Q,P,Pp,Dp,view=[-0.05..0.05,-0.1..0.3]);

##########################################################
#   This is b): 32,1,2,1 
#
G:=Groebner[gbasis]([Planar(M,-9/4)[],Flex(M,-3/4),Flex(M,1)],plex(a,b,c,d)):
Dd:=[solve(G[1]=0,d)]:
C:=[solve(G[2]=0,c),solve(G[2]=0,c)]:
B:=[solve(subs(d=Dd[1],G[3])=0,b),solve(subs(d=Dd[2],G[3])=0,b)]: 
A:=[solve(subs(d=Dd[1],G[4])=0,a),solve(subs(d=Dd[2],G[4])=0,a)]:

###          a1  
#
#y:=linalg[multiply](vector([-1, A[1], B[1], 0,  C[1], 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd[1], 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
#G:=Groebner[gbasis]([factor(primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,x)))/(s-t)))), 
# primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,z))-
#           subs(t=1,z)*subs(s=t,subs(t=1,x)))/(s-t)/s^3/t^3)),
# factor(primpart(simplify((subs(t=1,z)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,z)))/(s-t))))],plex(s,t)):
#double:=[fsolve(G[1]=0,t,complex)]:
#X:=x/y:   Y:=-z/y:
#Yy:=Y+0.04:
#X:=X/Yy:  Y:=Y/Yy:
#P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
#Pp:=pointplot({[subs(s=-9/4,X),subs(s=-9/4,Y)]},symbol=circle,color=green):
#Pf:=pointplot({[subs(s=-3/4,X),subs(s=-3/4,Y)],
#               [subs(s=1,X),subs(s=1,Y)]},symbol=circle,color=red):
#Q:=plot({[X,Y,s=-3..3]},numpoints=150,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.2.1e2.b1.gif`,plotoptions=`height=180,width=180`):
#Dp:=pointplot({[Re(subs(s=double[5],X)),Re(subs(s=double[5],Y))],
#               [Re(subs(s=double[3],X)),Re(subs(s=double[3],Y))]},
#                symbol=circle,color=blue):
#display(Q,P,Pp,Pf,Dp);

#a2  double:=[-.991647 - .53*I, -.0453939 - .23624758*I]:

#y:=linalg[multiply](vector([-1, A[2], B[2], 0,  C[2], 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd[2], 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
#G:=Groebner[gbasis]([factor(primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,x)))/(s-t)))), 
# primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,z))-
#           subs(t=1,z)*subs(s=t,subs(t=1,x)))/(s-t)/s^3/t^3)),
# factor(primpart(simplify((subs(t=1,z)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,z)))/(s-t))))],plex(s,t)):
#double:=[fsolve(G[1]=0,t,complex)];
#X:=x/y:   Y:=z/y:
#Yy:=Y+0.06:
#X:=X/Yy:  Y:=Y/Yy:
#Z:=fsolve(y=0,s);
#P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
#Pp:=pointplot({[subs(s=-9/4,X),subs(s=-9/4,Y)]},symbol=circle,color=green):
#Pf:=pointplot({[subs(s=-3/4,X),subs(s=-3/4,Y)],
#               [subs(s=1,X),subs(s=1,Y)]},symbol=circle,color=red):
#Q:=plot({[X,Y,s=-3..3]},numpoints=150,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.2.1e2.b2.gif`,plotoptions=`height=180,width=180`):
#Dp:=pointplot({[Re(subs(s=double[1],X)),Re(subs(s=double[1],Y))],
#               [Re(subs(s=double[3],X)),Re(subs(s=double[3],Y))]},
#                symbol=circle,color=blue):
#display(Q,P,Pp,Pf,Dp);
#
#####################################################################

#####################################################################
#
#  11,1e2:  By genus formula, one node.
#
#  There are two kinds: a) 32,2,1,1 or b) 32,1,2,1
#
#   This is a): 32,11,1,1 
#
#G:=Groebner[gbasis]([Cusp(M,-3/4)[],Flex(M,1),Flex(M,-9/4)],plex(a,b,c,d)):
#
#Dd:=solve(G[1]=0,d):
#C:=solve(G[2]=0,c):
#B:=solve(subs(d=Dd[1],G[3])=0,b):
#A:=solve(subs(d=Dd[1],G[4])=0,a):
#y:=linalg[multiply](vector([-1, A, B, 0,  C, 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd, 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
#G:=Groebner[gbasis]([factor(primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,x)))/(s-t)))), 
# primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,z))-
#           subs(t=1,z)*subs(s=t,subs(t=1,x)))/(s-t)/s^3/t^3)),
# factor(primpart(simplify((subs(t=1,z)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,z)))/(s-t))))],plex(s,t)):
#double:=-.109756097561 - .265086159991*I:#[fsolve(G[1]=0,t,complex)][3];
#e1:=.1:
#X:=x/y:   Y:=z/y:#
#
#P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
#Pf:=pointplot({[subs(s=1,X),subs(s=1,Y)],
#               [subs(s=-9/4,X),subs(s=-9/4,Y)]},symbol=circle,color=red):
#Q:=plot({[X,Y,s=-4..4]},
#          numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.11.1e2.a.gif`,plotoptions=`height=180,width=180`):
#Dp:=pointplot({[Re(subs(s=double,X)),Re(subs(s=double,Y))]},
#                symbol=circle,color=blue):
#display(Q,P,Pf,Dp);

#
#   This is b): 32,1,11,1 
#
#G:=Groebner[gbasis]([Cusp(M,-9/4)[],Flex(M,1),Flex(M,-3/4)],plex(a,b,c,d)):#
#
#Dd:=solve(G[1]=0,d):
#C:=solve(G[2]=0,c):
#B:=solve(subs(d=Dd[1],G[3])=0,b):
#A:=solve(subs(d=Dd[1],G[4])=0,a):
#y:=linalg[multiply](vector([-1, A, B, 0,  C, 0]),RatNorm):
#z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd, 0]),RatNorm):
#x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
#e1:=.1:
#X:=x/(y+z):   Y:=z/(y+z):
#Xx:=X-0.2:
#X:=X/Xx: Y:=Y/Xx:
#X:=X+Y/7:
#Y:=Y-X/5:
#Z:=fsolve(Xx=0,s):e1:=0.008:e2:=0.028:
#Xt:=simplify(subs(s=1/t,X)):
#Yt:=simplify(subs(s=1/t,Y)):
#
#P:=pointplot([subs(s=0,X),subs(s=0,Y)],symbol=circle,color=maroon):
#Pf:=pointplot({[subs(s=1,X),subs(s=1,Y)],
#               [subs(s=-3/4,X),subs(s=-3/4,Y)]},symbol=circle,color=red):
#Q:=plot({[X,Y,s=-1..Z-e1],[X,Y,s=Z+e2..1],[Xt,Yt,t=-1..1]},
#          numpoints=100,axes=none,color=blue):
#plotsetup(gif,plotoutput=`32.11.1e2.b.gif`,plotoptions=`height=180,width=180`):
#display(Q,P,Pf);
#############################################





#####################################################################
#
#  1e4:  By genus formula, two nodes.
#        Three curves  a, b, c
#
#G:=Groebner[gbasis]([Flex(M,-3),Flex(M,-1),Flex(M,3),Flex(M,1)],plex(a,b,c,d)):
#Dd:=[solve(G[1]=0,d)]:
#C:=[solve(G[2]=0,c),solve(G[2]=0,c),solve(G[2]=0,c)]:
#B:=[solve(subs(d=Dd[1],G[3])=0,b),solve(subs(d=Dd[2],G[3])=0,b),solve(subs(d=Dd[3],G[3])=0,b)]: 
#A:=[solve(subs(d=Dd[1],G[4])=0,a),solve(subs(d=Dd[2],G[4])=0,a),solve(subs(d=Dd[3],G[4])=0,a)]:##
#
#for i from 1 to 3 do 
# y:=linalg[multiply](vector([-1, A[i], B[i], 0,  C[i], 0]),RatNorm):
# z:=linalg[multiply](vector([ 0, 0, 0,-1, Dd[i], 0]),RatNorm):
# x:=linalg[multiply](vector([ 0, 0, 0, 0,  0, 1]),RatNorm):
# G:=Groebner[gbasis]([factor(primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,x)))/(s-t)))), 
# primpart(simplify((subs(t=1,x)*subs(s=t,subs(t=1,z))-
#           subs(t=1,z)*subs(s=t,subs(t=1,x)))/(s-t)/s^3/t^3)),
# factor(primpart(simplify((subs(t=1,z)*subs(s=t,subs(t=1,y))-
#           subs(t=1,y)*subs(s=t,subs(t=1,z)))/(s-t))))],plex(s,t)):
# double[i]:=[fsolve(G[1]=0,t,complex)]; 
# X[i]:=x/y:
# Y[i]:=z/y:
# Z[i]:=[fsolve(y=0,s)]:
#od:#
#
#Xx:=X[1]-10*Y[1]+1:
#X[1]:=X[1]/Xx:  Y[1]:=Y[1]/Xx:  
#Xx:=simplify(X[1]+0.08):
#z1:=fsolve(Xx=0,s):
#X[1]:=X[1]/Xx:  Y[1]:=Y[1]/Xx:  
#X[1]:=simplify(X[1]+Y[1]/10):
#Y[1]:=simplify(Y[1]-4*X[1]/5):
#
#Yy:=simplify(Y[2]-0.1):
#X[2]:=X[2]/Yy:  Y[2]:=Y[2]/Yy:  
#
#Xx:=simplify(X[3]+0.14):
#z3:=fsolve(Xx=0,s):
#X[3]:=X[3]/Xx:  Y[3]:=Y[3]/Xx:  
#X[3]:=X[3]+0.1167*Y[3]:
#Y[3]:=Y[3]-0.5*X[3]:
#
#for i from 1 to 3 do 
# x:=X[i]: y:=Y[i]:
# P[i]:=pointplot([subs(s=0,x),subs(s=0,y)],symbol=circle,color=maroon):
# Pf[i]:=pointplot({[subs(s=-3,x),subs(s=-3,y)],
#               [subs(s=-1,x),subs(s=-1,y)],
#               [subs(s= 1,x),subs(s= 1,y)],
#               [subs(s= 3,x),subs(s= 3,y)]},symbol=circle,color=red):
#od:
#
#xt:=subs(s=1/t,X[1]):  yt:=subs(s=1/t,Y[1]):
#Q[1]:=plot({[X[1],Y[1],s=-1..z1-0.07],
#            [X[1],Y[1],s=z1+0.04..1],[xt,yt,t=-1..1]},
#          numpoints=100,axes=none,color=blue):
#Q[2]:=plot({[X[2],Y[2],s=-4..4]},numpoints=100,axes=none,color=blue):
#xt:=subs(s=1/t,X[3]):  yt:=subs(s=1/t,Y[3]):
#Q[3]:=plot({[X[3],Y[3],s=-1..z3-0.07],
#            [X[3],Y[3],s=z3+0.07..1],[xt,yt,t=-1..1]},
#          numpoints=100,axes=none,color=blue):
#
#Dp[1]:=pointplot({[Re(subs(s=double[1][2],X[1])),Re(subs(s=double[1][2],Y[1]))]},
#                symbol=circle,color=blue):
#Dp[2]:=pointplot({[Re(subs(s=double[2][3],X[2])),Re(subs(s=double[2][3],Y[2]))],
#                  [Re(subs(s=double[2][5],X[2])),Re(subs(s=double[2][5],Y[2]))]},
#                symbol=circle,color=blue):
#Dp[3]:=pointplot({[Re(subs(s=double[3][3],X[3])),Re(subs(s=double[3][3],Y[3]))],
#                  [Re(subs(s=double[3][1],X[3])),Re(subs(s=double[3][1],Y[3]))]},
#                symbol=circle,color=blue):
#
#plotsetup(gif,plotoutput=`32.1e4.a.gif`,plotoptions=`height=180,width=180`):
#display(Q[1],P[1],Pf[1],Dp[1]);#
#
#plotsetup(gif,plotoutput=`32.1e4.b.gif`,plotoptions=`height=180,width=180`):
#display(Q[2],P[2],Pf[2],Dp[2]);
#
#plotsetup(gif,plotoutput=`32.1e4.c.gif`,plotoptions=`height=180,width=180`):
#display(Q[3],P[3],Pf[3],Dp[3]);
##########################################

