    |\^/|     Maple 18 (X86 64 LINUX)
._|\|   |/|_. Copyright (c) Maplesoft, a division of Waterloo Maple Inc. 2014
 \  MAPLE  /  All rights reserved. Maple is a trademark of
 <____ ____>  Waterloo Maple Inc.
      |       Type ? for help.
#Corollary10.maple
#
#    This computes the multiplicity of the scheme S/I, where I is minimally generated by
# t forms of degree n lying in a pencil, each raised to the power r+1.  This is used
# in (currently) Corollary 10.  It also computes the Hilbert function in this case,
# for different values of t, n, and r (currently t=3, n=2, and r=1..11).
#
#################################################################################
#interface(quiet=true):
#
#  Hilbert function of S = R[x,y,z]
#
> HPS := d -> (d+2)*(d+1)/2:
#
#  Let J = ideal G_1^{r+1}, ..., G_t^{r+1}, 
#
#  Where G_i has degree n in x,y,z, each pair is relaatively prime and they are members of
# a pencil, and these powers are linearly independent so that (t<=r+2, at least)
#
#  Using the Schenck-Stillman Hilbert-Burch resolution of R[x,y]/I, for I an ideal of powers of linear forms,
# pushing forward to $S$ and extending scalars to S gives the resolution of S/J.
#
#  S((-r-1-a)n)^{s_1} \oplus S((-r-2-a)n)^{s_2}  --> S((-r-1)n)^t --> S --> S/I
#
# where we have:
#
#  a := \floor (r+1)/(t-1) 
#
# and
#
> s1:=(t-1)*a+t-r-2:
> s2:=(t-1)-s1:
#
#  Thus the Hilbert function of S/J is
#
> Mult := s1*HPS(d-(r+1+a)*n)+s2*HPS(d-(r+2+a)*n) - t*HPS(d-(r+1)*n) + HPS(d):
#
> simplify(Mult);
         2  2    2  2        2      2           2  2                 2
        a  n    n  r    3 a n    3 n  r    2   a  n  t      2     a n  t
        ----- + ----- + ------ + ------ + n  - ------- + a n  r - ------
          2       2       2        2              2                 2

#
#  This has a simple form
#
> BNC:= x -> x*(x-1)/2;
                           BNC := x -> 1/2 x (x - 1)

#
> simplify(n^2*BNC(a+r+2) - t*n^2*BNC(a+1));
         2  2    2  2        2      2           2  2                 2
        a  n    n  r    3 a n    3 n  r    2   a  n  t      2     a n  t
        ----- + ----- + ------ + ------ + n  - ------- + a n  r - ------
          2       2       2        2              2                 2

#
> expand(n^2*BNC(a+r+2) - t*n^2*BNC(a+1)-Mult);
                                       0

#
#  Now let us compute the Hilbert function, and compare it to the constant Splines (CS)
#
> HFS:= d ->  piecewise(d<0, 0, d>=0, HPS(d)):
#
#  This is for t=3.
#
> interface(quiet=true):
  r |  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26
 ---+------------------------------------------------------------------------------------------------------------
  1 |  1   3   6  10  13  15  16  16  16  16  16  16  16  16  16  16  16  16  16  16  16  16  16  16  16  16  16 
  2 |  1   3   6  10  15  21  25  27  28  28  28  28  28  28  28  28  28  28  28  28  28  28  28  28  28  28  28 
  3 |  1   3   6  10  15  21  28  36  42  46  48  48  48  48  48  48  48  48  48  48  48  48  48  48  48  48  48 
  4 |  1   3   6  10  15  21  28  36  45  55  63  69  73  75  76  76  76  76  76  76  76  76  76  76  76  76  76 
  5 |  1   3   6  10  15  21  28  36  45  55  66  78  88  96 102 106 108 108 108 108 108 108 108 108 108 108 108 
  6 |  1   3   6  10  15  21  28  36  45  55  66  78  91 105 117 127 135 141 145 147 148 148 148 148 148 148 148 
  7 |  1   3   6  10  15  21  28  36  45  55  66  78  91 105 120 136 150 162 172 180 186 190 192 192 192 192 192 
  8 |  1   3   6  10  15  21  28  36  45  55  66  78  91 105 120 136 153 171 187 201 213 223 231 237 241 243 244 
  9 |  1   3   6  10  15  21  28  36  45  55  66  78  91 105 120 136 153 171 190 210 228 244 258 270 280 288 294 
 10 |  1   3   6  10  15  21  28  36  45  55  66  78  91 105 120 136 153 171 190 210 231 253 273 291 307 321 333 
 11 |  1   3   6  10  15  21  28  36  45  55  66  78  91 105 120 136 153 171 190 210 231 253 276 300 322 342 360 
 ---+-----------------------------------------------------------------------------------------------------------
 CS |  1   3   6  10  15  21  28  36  45  55  66  78  91 105 120 136 153 171 190 210 231 253 276 300 325 351 378 
 ---+-----------------------------------------------------------------------------------------------------------
  r |  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26
