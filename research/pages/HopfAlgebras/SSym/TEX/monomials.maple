# monomials.maple
#
#   This computes and prints out a TeX file of the Monomial
#  functions in terms of the Fundamental functions.
#
read(`MalvenutoProcedures`):
####################################################
#
#   This procedure creates a TeX-ed term of the coproduct, 
#   given a triple T and a symbol X for the variables
#
MakeTerm:=proc(T,X)
local Str, n1, j, n2: 
 if T[1]=1 then Str:= ``: fi:
 if T[1]=-1 then Str:= `-`: fi:
 if abs(T[1])<>1 then Str:=cat(convert(T[1],symbol),`*`): fi:
 n1:=nops(T[2]):
 if n1=0 then 
  Str:=cat(Str,`1 `):
 else
  Str:=cat(Str,`\\`,convert(X,symbol),`_{`):
  for j from 1 to n1 do
   Str:=cat(Str,convert(T[2][j],symbol)):
  od:
  Str:=cat(Str,`}`):
 fi:
Str
end:
################################################################
Format := proc(L,X)
#
#  Given a list L, this makes the formal sum L in TeX
#
local  Str, j:
 Str:=MakeTerm(L[1],X):
 if nops(L)>1 then
  for j from 2 to nops(L) do
   if L[j][1]>0 then 
     Str:=cat(Str,`+`):
   fi:
    Str:=cat(Str,MakeTerm(L[j],X)):
  od:
 fi:
 Str
end:
###############################################################

file:=fopen(`Monomials.tex`,WRITE):

fprintf(file,`\\documentclass[12pt]{article}\n`):
fprintf(file,`\\newcommand{\\M}{\\mathcal{M}}\n`):
fprintf(file,`\\newcommand{\\F}{\\mathcal{F}}\n`):
fprintf(file,`\\headheight=8pt \\topmargin=-20pt\n`): 
fprintf(file,`\\textheight=649pt \\textwidth=432pt\n`):
fprintf(file,`\\oddsidemargin=18pt \\evensidemargin=18pt\n\n`):

fprintf(file,`\\begin{document}\n`):

fprintf(file,`\\begin{center}\\Large\\bf\n`):
fprintf(file,`Monomial functions in terms of the Fundamental functions\n`):
fprintf(file,`\\end{center}\n`):


fprintf(file,`%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%`):
fprintf(file,`\n`):
for n from 2 to 4 do 

fprintf(file,cat(`Monomial Functions for $\\mathcal{S}_`,n,`$\n\n`)):
fprintf(file,cat(`\\begin{enumerate}\n`)):
for w in combinat[permute](n) do 

fprintf(file,cat(`\\item[]\\hspace{-50pt}$`,MakeTerm([1,w],\M),`=`,Format(MakeMonom(w),F),`$.\\vspace{-10pt}\n`)):
od:
fprintf(file,cat(`\\end{enumerate}\n`)):
fprintf(file,`%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%`):
fprintf(file,` \n`):
od:


fprintf(file,`\\end{document}\n`):

quit: