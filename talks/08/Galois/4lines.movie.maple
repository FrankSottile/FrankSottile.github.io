#4lines.movie.maple
#
# Frank Sottile
# Anton Leykin
# IMA, Minneapolis
# 2 July 2007
#
###########################################################################
#
# This is for the problem of 4 lines
#
# ... use Standard (as opposed to Classic) worksheet to get
# "transparency" going ...
###########################################################################
interface(quiet=true):
plotsetup(x11):
with(plots):
with(plottools):

#   Draws a line given by L := [ Point, UnitDirection ]
drawLine := proc(L,a,b,COLOR,WIDTH)
 return(tubeplot([L[1][1]+t*L[2][1],
                 L[1][2]+t*L[2][2],
                 L[1][3]+t*L[2][3]], t=a..b,
                    color=COLOR, radius=WIDTH/50.,numpoints=2,style=patchnogrid))
end proc:

#   Draws a line going through [ Point, Point ]
drawSec := proc(L,a,b,COLOR,WIDTH)
 return(tubeplot([L[1][1]+t*(L[2][1]-L[1][1]),
                 L[1][2]+t*(L[2][2]-L[1][2]),
                 L[1][3]+t*(L[2][3]-L[1][3])], t=a..b,
                    color=COLOR, radius=WIDTH/50.,numpoints=2,style=patchnogrid))
end proc:
###############################################################################
#  [ r, r,  1 ]    t:=1
#  [-r, r, -1 ]    t:=-1
#  [-1, r,  r ]    t:=0

# the hyperboloid
R := (r,th) -> [  r*cos(th) - sin(th), -r, r*sin(th) + cos(th) ]:

L1 := [[0,  0, 1], [1, 1, 0]]:
L2 := [[0,  0, -1], [-1, 1, 0]]:
L3 := [[-1, 0, 0], [0, 1, 1]]:

# line 4 (not on the hyperboloid)
L4:=th -> [R(2.2-0.6*cos(th),th),  R(2.2-0.6*cos(th+Pi),th+Pi)]:

# two solutions for line 4 specified
M1:=th -> [R(-3,th), R(3,th)]:
M2:=th -> [R(-3,th+Pi), R(3,th+Pi)]:

##########################################################################
ec := COLOR(RGB, 1, .7, 0):
semitransparent := 0.5:
H1 := plot3d(R(r,th), th=-Pi..Pi, r=-3..3,color=yellow,grid=[33,20]):
E1 := spacecurve(R(3,th), th=-Pi..Pi,color=ec,thickness=4,numpoints=33):
E2 := spacecurve(R(-3,th), th=-Pi..Pi,color=ec,thickness=4,numpoints=33):

# three fixed lines on the hyperboloid
l1 := drawLine(L1,-6,6,blue,2):
l2 := drawLine(L2,-8,8,green,2):
l3 := drawLine(L3,-5,5,sienna,2):

# solution lines for th=0
m1 := drawSec(M1(0),-0.5,1.5,magenta,1):
m2 := drawSec(M2(0),-0.5,1.5,red,1):

F := th-> display([drawSec(L4(th),-0.6,1.6,black,2),
                        drawSec(M1(th),-0.5,1.5,magenta,3),
                        drawSec(M2(th),-0.5,1.5,red,3),
                        m1,m2,l1,l2,l3,E1,E2,H1],
                       orientation=[-15+sin(th)*10,70+sin(th)*10]):


#plotsetup(gif,plotoutput="movie.gif",plotoptions=`height=800,width=520`):
#plotsetup(gif,plotoutput="movie.gif",plotoptions=`height=700,width=700`):


NFr:=150:

animate(F,[th],th=0..2*(1-1/NFr)*Pi,scaling=constrained,axes=none,frames=NFr);

#quit;