
NFR:=10:

Eps:=0.08:

tC1:=TanPoint(Family1,B,aSOLS[1]):
tC2:=TanPoint(Family1,B,aSOLS[2]):
tC3:=TanPointb(Family1,bSOLS[1],b):
tC4:=TanPointb(Family1,bSOLS[2],b):
tC1[1]:=tC1[1]+Eps*sin(th):
tC2[1]:=tC2[1]+Eps*sin(th):
tC3[1]:=tC3[1]+Eps*sin(th):
tC4[1]:=tC4[1]+Eps*sin(th):
tC1[2]:=tC1[2]+Eps*cos(th):
tC2[2]:=tC2[2]+Eps*cos(th):
tC3[2]:=tC3[2]+Eps*cos(th):
tC4[2]:=tC4[2]+Eps*cos(th):
TC1:=[tC1[1]*cos(T) + tC1[2]*sin(T), 
      tC1[2]*cos(T) - tC1[1]*sin(T), tC1[3]]:
TC2:=[tC2[1]*cos(T) + tC2[2]*sin(T), 
      tC2[2]*cos(T) - tC2[1]*sin(T), tC2[3]]:
TC3:=[tC3[1]*cos(T) + tC3[2]*sin(T), 
      tC3[2]*cos(T) - tC3[1]*sin(T), tC3[3]]:
TC4:=[tC4[1]*cos(T) + tC4[2]*sin(T), 
      tC4[2]*cos(T) - tC4[1]*sin(T), tC4[3]]:
######################################################
eps:=0.08: 
Axis:=[X*cos(ph) + eps*cos(th)*sin(ph),
       eps*cos(th)*cos(ph) - X*sin(ph), eps*sin(th)]:
s2:=sqrt(2):

#plotsetup(gif,plotoutput=`.r.gif`,plotoptions=`height=560,width=560`):
display([
animate3d([TC1[]],B=-1..-0.1,th=-Pi..Pi,T=-Pi..Pi,color=blue,grid=[100,5],frames=NFR),
animate3d([TC1[]],B=0.1..1,th=-Pi..Pi,T=-Pi..Pi,color=blue,grid=[100,5],frames=NFR),
animate3d([TC1[]],B=-5..-s2,th=-Pi..Pi,T=-Pi..Pi,color=blue,grid=[100,5],frames=NFR),
animate3d([TC1[]],B=s2..5,th=-Pi..Pi,T=-Pi..Pi,color=blue,grid=[100,5],frames=NFR),
animate3d([TC2[]],B=-1..-0.1,th=-Pi..Pi,T=-Pi..Pi,color=blue,grid=[100,5],frames=NFR),
animate3d([TC2[]],B=0.1..1,th=-Pi..Pi,T=-Pi..Pi,color=blue,grid=[100,5],frames=NFR),
animate3d([TC2[]],B=-5..-s2,th=-Pi..Pi,T=-Pi..Pi,color=blue,grid=[100,5],frames=NFR),
animate3d([TC2[]],B=s2..5,th=-Pi..Pi,T=-Pi..Pi,color=blue,grid=[100,5],frames=NFR),
#  X-axis
animate3d(Axis,X=-8..8,th=-Pi..Pi,ph=-Pi..Pi,color=magenta,grid=[2,5],frames=NFR)
,animate3d([(Xp)*cos(T)+sin(T)*(Yp),
             -(Xp)*sin(T)+cos(T)*(Yp),Zp],
              t=-8*abs(g)..8*abs(g),th=-Pi..Pi,T=-Pi..Pi,
              color=tan,grid=[30,40],frames=NFR)
], insequence=false, view=[-7..7,-9..5,-5..5],
  orientation=[0,75],scaling = CONSTRAINED);


