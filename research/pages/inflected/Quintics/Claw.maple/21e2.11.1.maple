#21e2.11.1.maple
#
# Frank Sottile
# 18 January 2001
# Lubbock, Texas
#
#
#    With the order  (plane, claw, flex, claw)  there are three curves.
#  Each has a crossing  with the flex and planar point are on different loops.
#  All possible distributions of the claws occur, one on each loop, both with
#  the flex, and both with the planar point.
#
#   We next try the order (claw, claw, planar, cusp) 
#  Here, there is one with no crossing, and two with a crossing:
#  one with the planar point on a loop, and one with both claws on a loop.
#
interface(quiet=true):
with(plots):
with(linalg):
with(Groebner):
read(`equations.maple`):
read(`EasySolve.maple`):
plotsetup(x11,plotoptions=`width=3in,height=2.5in`):

############################################################################

M:=matrix([
[1,s,s^2,  s^3,s^4  ,   s^5],
[0,1,2*s,3*s^2,4*s^3, 5*s^4],
[0,0, 1 ,3*s  ,6*s^2,10*s^3],
[0,0, 0 , 1   ,4*s  ,10*s^2],
[1,a, 0 , d   ,  0  ,  f   ],
[0,0, 1 , b   ,  0  ,  e   ],
[0,0, 0 , 0   ,  1  ,  c   ]]):


Ker:={[-a, 1, 0, 0, 0, 0], [-f, 0, -e, 0, -c, 1], [-d, 0, -b, 1, 0, 0]}:

#   This is for problem 21 * 21 * 11 * 1
#                       oo    0    1  -1
#
Inf:=-4/3: Plane:=4/5:
equations:=[OneOneEq(M,Plane)[],OneEq(M,Inf),TwoOneEq(M,0)[]]:
Eqs:=gbasis(equations,plex(a,b,c,d,e,f)):
Polys:=MakePolys(Ker,Eqs):
z:=Polys[1][1]:
y:=Polys[1][2]:
x:=Polys[1][3]:
#plot({[s,z,s=-2..2],[s,y,s=-2..2],[s,x-y,s=-2..2]},-2..2,-2..2,color=[red,green,blue]);
#plot({[s,x-3*y-z,s=-2..2]},-2..2,-2..2,color=magenta);
z:=x-y-z:
zero:=fsolve(z=0,s):
y:=(y-subs(s=zero-.0001,y/x)*x):
seps:=.2:   teps:=.02:
Xs:=x/z:    Ys:=y/z:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):

#plotsetup(gif,plotoutput=`21e2.11.1.a.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=Inf,Xs),subs(s=Inf,Ys)]},symbol=circle,color=red):
PP:=pointplot({[subs(s=Plane,Xs),subs(s=Plane,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=zero+seps..1],[Xt,Yt,t=1/zero+teps..1]},
        numpoints=200,color=blue,axes=none):
display(Q,P,PP);

############################################################

z:=Polys[2][1]:
y:=Polys[2][2]:
x:=Polys[2][3]:

#plot({[s,z,s=-2..2],[s,y,s=-2..2],[s,x,s=-2..2]},-2..2,-2..2,color=[red,green,blue]);
#plot({[s,x-3*y+3*z,s=-3..3]},-3..3,-4..4,color=magenta);

z:=x-3*y+3*z:
zero:=fsolve(z=0,s):
y:=(y-subs(s=zero-.0001,y/x)*x):
seps:=.8:   teps:=.1:
Xs:=x/z:
Ys:=-y/z:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):

#plotsetup(gif,plotoutput=`21e2.11.1.b.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=Inf,Xs),subs(s=Inf,Ys)]},symbol=circle,color=red):
PP:=pointplot({[subs(s=Plane,Xs),subs(s=Plane,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=-1..zero-seps],[Xt,Yt,t=-1..1/zero-teps]},
        numpoints=200,color=blue,axes=none):
display(Q,P,PP);

############################################################

z:=Polys[3][1]:
y:=Polys[3][2]:
x:=Polys[3][3]:

#plot({[s,z,s=-2..2],[s,y,s=-2..2],[s,x,s=-2..2]},-3..3,-20..20,color=[red,green,blue]);
#plot({[s,x-z,s=-3..3]},-3..3,-4..4,color=magenta);

z:=x-z+2*y:
zero:=fsolve(z=0,s):
y:=(y-subs(s=zero-.0001,y/x)*x):
seps:=.3:   teps:=.05:
Xs:=x/z:
Ys:=-y/z:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):

#plotsetup(gif,plotoutput=`21e2.11.1.c.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=Inf,Xs),subs(s=Inf,Ys)]},symbol=circle,color=red):
PP:=pointplot({[subs(s=Plane,Xs),subs(s=Plane,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=-1..zero-seps],[Xt,Yt,t=-1..1/zero-teps]},
         numpoints=200,color=blue,axes=none):
display(Q,P,PP);

###########################################################################
#   This is for problem 21 * 21 * 11 * 1
#                       oo    1    0  -1
#
Inf:=-1: Plane:=0:  Claw:=1/2:
equations:=[OneOneEq(M,Plane)[],OneEq(M,Inf),TwoOneEq(M,Claw)[]]:
Eqs:=gbasis(equations,plex(a,b,c,d,e,f)):
Polys:=MakePolys(Ker,Eqs):
z:=Polys[1][1]:
y:=Polys[1][2]:
x:=Polys[1][3]:
#plot({[s,z,s=-2..2],[s,y,s=-2..2],[s,x,s=-2..2]},-2..2,-2..2,color=[red,green,blue]);
#plot({[s,x-2*z+y=-3..3]},-3..3,-10..10,color=magenta);
z:=x-z+y/2:
zero:=fsolve(z=0,s):
y:=(y-subs(s=zero-.0001,y/x)*x):
seps:=.4:   teps:=.15:
Xs:=(x*subs(s=1,y)-y*1.063*subs(s=1,x))/z:    Ys:=y/z:
Xs:=Xs/(Ys+1): Ys:=Ys/(Ys+1):
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):

#plotsetup(gif,plotoutput=`21e2.11.1.d.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=Inf,Xs),subs(s=Inf,Ys)]},symbol=circle,color=red):
PP:=pointplot({[subs(s=Plane,Xs),subs(s=Plane,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=zero+seps..1],[Xt,Yt,t=1/zero+teps..1]},
         numpoints=200,color=blue,axes=none):
display(Q,P,PP);

############################################################
Inf:=-1: Plane:=0:  Claw:=1:
equations:=[OneOneEq(M,Plane)[],OneEq(M,Inf),TwoOneEq(M,Claw)[]]:
Eqs:=gbasis(equations,plex(a,b,c,d,e,f)):
Polys:=MakePolys(Ker,Eqs):
z:=Polys[2][1]:
y:=Polys[2][2]:
x:=Polys[2][3]:
#plot({[s,z,s=-2..2],[s,y,s=-2..2],[s,x,s=-2..2]},-2..2,-2..2,color=[red,green,blue]);
#plot({[s,x+2*z-y,s=-3..3],[s,z,s=-3..3]},-3..3,-10..10,color=magenta);
z:=x+3*z:
zero:=fsolve(z=0,s):
y:=(y-subs(s=zero-.0001,y/x)*x):
seps:=.5:   teps:=.1:
Xs:=(x*subs(s=1,y)-y*1.063*subs(s=1,x))/z:    Ys:=-y/z:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):

#plotsetup(gif,plotoutput=`21e2.11.1.e.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=Inf,Xs),subs(s=Inf,Ys)]},symbol=circle,color=red):
PP:=pointplot({[subs(s=Plane,Xs),subs(s=Plane,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=-1..zero-seps],[Xt,Yt,t=-1..1/zero-teps]},
         numpoints=200,color=blue,axes=none):
display(Q,P,PP);

############################################################
z:=Polys[3][1]:
y:=Polys[3][2]:
x:=Polys[3][3]:
#plot({[s,z,s=-2..2],[s,y,s=-2..2],[s,x,s=-2..2]},-2..2,-2..2,color=[red,green,blue]);
#plot({[s,x-z-y,s=-3..3],[s,z,s=-3..3]},-3..3,-10..10,color=magenta);
z:=x-z-y:
zero:=fsolve(z=0,s):
y:=(y-subs(s=zero-.0001,y/x)*x):
seps:=.25:   teps:=.25:
Xs:=(x*subs(s=1,y)-y*1.063*subs(s=1,x))/z:    Ys:=-y/z:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):

#plotsetup(gif,plotoutput=`21e2.11.1.f.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=Inf,Xs),subs(s=Inf,Ys)]},symbol=circle,color=red):
PP:=pointplot({[subs(s=Plane,Xs),subs(s=Plane,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=zero+seps..1],[Xt,Yt,t=1/zero+teps..1]},
         numpoints=200,color=blue,axes=none):
display(Q,P,PP);

############################################################
