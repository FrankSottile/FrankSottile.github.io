#numberOfLines.maple
#
#  This will use parametrization methods to determine the number
# of lines transversal to 4 triangles, where each triangle is given
# as a list of three points in R^3.
#
################################################################
interface(quiet=true):
read("procedures.maple"):
################################################################
Machine:="Denali":

read(sprintf("%s.freq",Machine)):
Freq:=array(0..162,Frequency):

file:=fopen(sprintf("%s.count",Machine),WRITE):
fprintf(file,"%d",_seed):
fclose(file):

tdie:= rand(-10000..100000):
Triangles:=[
 [[tdie(), tdie(), tdie()], [tdie(), tdie(), tdie()], [tdie(), tdie(), tdie()]],
 [[tdie(), tdie(), tdie()], [tdie(), tdie(), tdie()], [tdie(), tdie(), tdie()]],
 [[tdie(), tdie(), tdie()], [tdie(), tdie(), tdie()], [tdie(), tdie(), tdie()]],
 [[tdie(), tdie(), tdie()], [tdie(), tdie(), tdie()], [tdie(), tdie(), tdie()]]]:

NUMBER:=numberOfTransversals(Triangles,0):

if NUMBER mod 2 = 1 then 
 ssystem(sprintf("cat  %s.count >>  ODD",Machine)):
end if:

if NUMBER>35 then 
 NAME:=sprintf("%s.%d",Machine,NUMBER):
 file := fopen(NAME,APPEND):
 fprintf(file,`%a,\n\n`,Triangles):
 fclose(file):
fi:

Freq[NUMBER]:=Freq[NUMBER]+1:

file:=fopen(sprintf("%s.freq",Machine),WRITE):
fprintf(file,"Time:=%12.2f:\n\n",Time+time()):
fprintf(file,"Frequency:=\n  ["):

for i from 0 to 161 do 
 fprintf(file," %6d,",Freq[i]):
 if i+1 mod 8 = 0 then 
  fprintf(file,"\n   "):
 end if:
end do: 
fprintf(file," %6d]:\n",Freq[162]):
fclose(file):

quit;
