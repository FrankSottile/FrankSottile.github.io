interface(quiet=true):
#
#  This file helps check the algebraic proof of Shapiro 
#  given in shapiro.html
#
#
Es:=p23-2*s*p13+3*s^2*p12+s^2*p03-2*s^3*p02+s^4*p01:
Et:=p23-2*t*p13+3*t^2*p12+t^2*p03-2*t^3*p02+t^4*p01:
Eu:=p23-2*u*p13+3*u^2*p12+u^2*p03-2*u^3*p02+u^4*p01:
Ev:=p23-2*v*p13+3*v^2*p12+v^2*p03-2*v^3*p02+v^4*p01:

Pluecker:= p12*p03-p13*p02+p01*p23;

Est:=collect(simplify((Es-Et)/(s-t)),[p01,p02,p03,p12,p13,p23]):
Esu:=collect(simplify((Es-Eu)/(s-u)),[p01,p02,p03,p12,p13,p23]):
Esv:=collect(simplify((Es-Ev)/(s-v)),[p01,p02,p03,p12,p13,p23]):
Estu:=collect(simplify((Est-Esu)/(t-u)),[p01,p02,p03,p12,p13,p23]):
Estv:=collect(simplify((Est-Esv)/(t-v)),[p01,p02,p03,p12,p13,p23]):
Estuv:=collect(simplify((Estu-Estv)/(u-v)),[p01,p02,p03,p12,p13,p23]);

Estu:=collect(simplify((s+t+u)*Estuv-Estu),[p01,p02,p03,p12,p13,p23]);
Est:=collect(simplify((s^2+s*t+t^2)*Estuv-Est),[p01,p02,p03,p12,p13,p23]):
Es:=collect(simplify((s^3)*Estuv-Es),[p01,p02,p03,p12,p13,p23]):

Est:=collect(simplify((s+t)*Estu-Est),[p01,p02,p03,p12,p13,p23]);
Es:=collect(simplify((s^2)*Estu-Es),[p01,p02,p03,p12,p13,p23]):

Es:=collect(simplify((s)*Est-Es),[p01,p02,p03,p12,p13,p23]);

Pluecker:=collect(simplify(Pluecker+p01*Es),[p01,p02,p03,p12,p13,p23]):
Pluecker:=collect(simplify(4*Pluecker+Estuv*Est),[p01,p02,p03,p12,p13,p23]):
Pluecker:=collect(simplify(Pluecker-p01*Estuv*(s*t*u+s*t*v+s*u*v+t*u*v)),[p01,p02,p03,p12,p13,p23]):
Pluecker:=collect(simplify(-Pluecker+p01*Est*(s+t+u+v)),[p01,p02,p03,p12,p13,p23]):
Pluecker:=collect(simplify(Pluecker-4*p12*Estu),[p01,p02,p03,p12,p13,p23]);


discrim(subs(p01=1,Pluecker),p12)-
8*expand((s-t)^2*(u-v)^2 +(s-u)^2*(t-v)^2 +(s-v)^2*(u-t)^2);

B:=simplify(subs(v=1,discrim(subs(p01=1,Pluecker),p12)));
A:=[solve(1+x+x^2=0,x)]:

B:=simplify(subs(u=A[1],B));
B:=simplify(subs(t=A[2],B));
quit;
