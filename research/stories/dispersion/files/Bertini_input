% Bertini input file for project about degenerate eigenvalues with Ngoc Do and Peter Kuchment

CONFIG
  TrackType:1;
END;
INPUT
   variable_group t,a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],z[1],z[2];
   function f1,f2,f3,f4;

%% SubFunctions 

  S11 = 2*a[3]*a[9]*z[1]^4*z[2]-2*a[4]*a[8]*z[1]^4*z[2]-2*a[1]*a[8]*z[1]*z[2]^2+2*a[2]*a[3]*z[1]*z[2]^2-2*a[4]*a[7]*z[1]*z[2]^2+2*a[6]*a[9]*z[1]*z[2]^2-2*t*a[4]*z[1]*z[2]-2*t*a[8]*z[1]*z[2]+4*a[1]*a[8]*z[1]*z[2]+2*a[2]*a[4]*z[1]*z[2]+2*a[2]*a[8]*z[1]*z[2]+2*a[3]*a[4]*z[1]*z[2]+2*a[3]*a[5]*z[1]*z[2]+2*a[3]*a[8]*z[1]*z[2]+2*a[4]*a[5]*z[1]*z[2]+2*a[4]*a[6]*z[1]*z[2]+4*a[4]*a[7]*z[1]*z[2]+8*a[4]*a[8]*z[1]*z[2]+2*a[4]*a[9]*z[1]*z[2]+2*a[5]*a[8]*z[1]*z[2]+2*a[5]*a[9]*z[1]*z[2]+2*a[6]*a[8]*z[1]*z[2]+2*a[8]*a[9]*z[1]*z[2]-2*a[1]*a[8]*z[1]+2*a[2]*a[9]*z[1]+2*a[3]*a[6]*z[1]+6*a[3]*a[9]*z[2]-2*a[4]*a[7]*z[1]-6*a[4]*a[8]*z[2];
  S22 = -2*a[1]*a[7]*z[1]*z[2]^4+2*a[2]*a[6]*z[1]*z[2]^4-2*a[1]*a[8]*z[1]^2*z[2]+2*a[2]*a[3]*z[1]^2*z[2]-2*a[4]*a[7]*z[1]^2*z[2]+2*a[6]*a[9]*z[1]^2*z[2]-2*t*a[1]*z[1]*z[2]-2*t*a[7]*z[1]*z[2]+2*a[1]*a[2]*z[1]*z[2]+2*a[1]*a[3]*z[1]*z[2]+2*a[1]*a[5]*z[1]*z[2]+2*a[1]*a[6]*z[1]*z[2]+8*a[1]*a[7]*z[1]*z[2]+4*a[1]*a[8]*z[1]*z[2]+2*a[1]*a[9]*z[1]*z[2]+2*a[2]*a[5]*z[1]*z[2]+2*a[2]*a[7]*z[1]*z[2]+2*a[3]*a[7]*z[1]*z[2]+4*a[4]*a[7]*z[1]*z[2]+2*a[5]*a[6]*z[1]*z[2]+2*a[5]*a[7]*z[1]*z[2]+2*a[6]*a[7]*z[1]*z[2]+2*a[7]*a[9]*z[1]*z[2]-6*a[1]*a[7]*z[1]-2*a[1]*a[8]*z[2]+6*a[2]*a[6]*z[1]+2*a[2]*a[9]*z[2]+2*a[3]*a[6]*z[2]-2*a[4]*a[7]*z[2];
  S21 = -a[1]*a[8]*z[1]^2*z[2]^2+a[2]*a[9]*z[1]^2*z[2]^2+a[3]*a[6]*z[1]^2*z[2]^2-a[4]*a[7]*z[1]^2*z[2]^2+a[1]*a[8]*z[1]^2+a[1]*a[8]*z[2]^2-a[2]*a[3]*z[1]^2-a[2]*a[3]*z[2]^2+a[4]*a[7]*z[1]^2+a[4]*a[7]*z[2]^2-a[6]*a[9]*z[1]^2-a[6]*a[9]*z[2]^2-a[1]*a[8]+a[2]*a[9]+a[3]*a[6]-a[4]*a[7];

%% Functions

  f1 = a[1]*a[7]*z[1]^2*z[2]^4+a[1]*a[8]*z[1]^3*z[2]^3-a[2]*a[6]*z[1]^2*z[2]^4-a[2]*a[9]*z[1]^3*z[2]^3-a[3]*a[6]*z[1]^3*z[2]^3-a[3]*a[9]*z[1]^4*z[2]^2+a[4]*a[7]*z[1]^3*z[2]^3+a[4]*a[8]*z[1]^4*z[2]^2+t*a[1]*z[1]^2*z[2]^3+t*a[4]*z[1]^3*z[2]^2+t*a[7]*z[1]^2*z[2]^3+t*a[8]*z[1]^3*z[2]^2-a[1]*a[2]*z[1]^2*z[2]^3-a[1]*a[3]*z[1]^2*z[2]^3-a[1]*a[5]*z[1]^2*z[2]^3-a[1]*a[6]*z[1]^2*z[2]^3-4*a[1]*a[7]*z[1]^2*z[2]^3-2*a[1]*a[8]*z[1]^3*z[2]^2-2*a[1]*a[8]*z[1]^2*z[2]^3-a[1]*a[9]*z[1]^2*z[2]^3-a[2]*a[4]*z[1]^3*z[2]^2-a[2]*a[5]*z[1]^2*z[2]^3-a[2]*a[7]*z[1]^2*z[2]^3-a[2]*a[8]*z[1]^3*z[2]^2-a[3]*a[4]*z[1]^3*z[2]^2-a[3]*a[5]*z[1]^3*z[2]^2-a[3]*a[7]*z[1]^2*z[2]^3-a[3]*a[8]*z[1]^3*z[2]^2-a[4]*a[5]*z[1]^3*z[2]^2-a[4]*a[6]*z[1]^3*z[2]^2-2*a[4]*a[7]*z[1]^3*z[2]^2-2*a[4]*a[7]*z[1]^2*z[2]^3-4*a[4]*a[8]*z[1]^3*z[2]^2-a[4]*a[9]*z[1]^3*z[2]^2-a[5]*a[6]*z[1]^2*z[2]^3-a[5]*a[7]*z[1]^2*z[2]^3-a[5]*a[8]*z[1]^3*z[2]^2-a[5]*a[9]*z[1]^3*z[2]^2-a[6]*a[7]*z[1]^2*z[2]^3-a[6]*a[8]*z[1]^3*z[2]^2-a[7]*a[9]*z[1]^2*z[2]^3-a[8]*a[9]*z[1]^3*z[2]^2+t^2*z[1]^2*z[2]^2-2*t*a[1]*z[1]^2*z[2]^2-2*t*a[2]*z[1]^2*z[2]^2-2*t*a[3]*z[1]^2*z[2]^2-2*t*a[4]*z[1]^2*z[2]^2-2*t*a[5]*z[1]^2*z[2]^2-2*t*a[6]*z[1]^2*z[2]^2-2*t*a[7]*z[1]^2*z[2]^2-2*t*a[8]*z[1]^2*z[2]^2-2*t*a[9]*z[1]^2*z[2]^2+2*a[1]*a[2]*z[1]^2*z[2]^2+2*a[1]*a[3]*z[1]^2*z[2]^2+2*a[1]*a[5]*z[1]^2*z[2]^2+2*a[1]*a[6]*z[1]^2*z[2]^2+6*a[1]*a[7]*z[1]^2*z[2]^2+a[1]*a[8]*z[1]^3*z[2]+4*a[1]*a[8]*z[1]^2*z[2]^2+a[1]*a[8]*z[1]*z[2]^3+2*a[1]*a[9]*z[1]^2*z[2]^2-a[2]*a[3]*z[1]^3*z[2]+2*a[2]*a[3]*z[1]^2*z[2]^2-a[2]*a[3]*z[1]*z[2]^3+2*a[2]*a[4]*z[1]^2*z[2]^2+2*a[2]*a[5]*z[1]^2*z[2]^2+2*a[2]*a[6]*z[1]^2*z[2]^2+2*a[2]*a[7]*z[1]^2*z[2]^2+2*a[2]*a[8]*z[1]^2*z[2]^2+2*a[2]*a[9]*z[1]^2*z[2]^2+2*a[3]*a[4]*z[1]^2*z[2]^2+2*a[3]*a[5]*z[1]^2*z[2]^2+2*a[3]*a[6]*z[1]^2*z[2]^2+2*a[3]*a[7]*z[1]^2*z[2]^2+2*a[3]*a[8]*z[1]^2*z[2]^2+2*a[3]*a[9]*z[1]^2*z[2]^2+2*a[4]*a[5]*z[1]^2*z[2]^2+2*a[4]*a[6]*z[1]^2*z[2]^2+a[4]*a[7]*z[1]^3*z[2]+4*a[4]*a[7]*z[1]^2*z[2]^2+a[4]*a[7]*z[1]*z[2]^3+6*a[4]*a[8]*z[1]^2*z[2]^2+2*a[4]*a[9]*z[1]^2*z[2]^2+2*a[5]*a[6]*z[1]^2*z[2]^2+2*a[5]*a[7]*z[1]^2*z[2]^2+2*a[5]*a[8]*z[1]^2*z[2]^2+2*a[5]*a[9]*z[1]^2*z[2]^2+2*a[6]*a[7]*z[1]^2*z[2]^2+2*a[6]*a[8]*z[1]^2*z[2]^2-a[6]*a[9]*z[1]^3*z[2]+2*a[6]*a[9]*z[1]^2*z[2]^2-a[6]*a[9]*z[1]*z[2]^3+2*a[7]*a[9]*z[1]^2*z[2]^2+2*a[8]*a[9]*z[1]^2*z[2]^2+t*a[1]*z[1]^2*z[2]+t*a[4]*z[1]*z[2]^2+t*a[7]*z[1]^2*z[2]+t*a[8]*z[1]*z[2]^2-a[1]*a[2]*z[1]^2*z[2]-a[1]*a[3]*z[1]^2*z[2]-a[1]*a[5]*z[1]^2*z[2]-a[1]*a[6]*z[1]^2*z[2]-4*a[1]*a[7]*z[1]^2*z[2]-2*a[1]*a[8]*z[1]^2*z[2]-2*a[1]*a[8]*z[1]*z[2]^2-a[1]*a[9]*z[1]^2*z[2]-a[2]*a[4]*z[1]*z[2]^2-a[2]*a[5]*z[1]^2*z[2]-a[2]*a[7]*z[1]^2*z[2]-a[2]*a[8]*z[1]*z[2]^2-a[3]*a[4]*z[1]*z[2]^2-a[3]*a[5]*z[1]*z[2]^2-a[3]*a[7]*z[1]^2*z[2]-a[3]*a[8]*z[1]*z[2]^2-a[4]*a[5]*z[1]*z[2]^2-a[4]*a[6]*z[1]*z[2]^2-2*a[4]*a[7]*z[1]^2*z[2]-2*a[4]*a[7]*z[1]*z[2]^2-4*a[4]*a[8]*z[1]*z[2]^2-a[4]*a[9]*z[1]*z[2]^2-a[5]*a[6]*z[1]^2*z[2]-a[5]*a[7]*z[1]^2*z[2]-a[5]*a[8]*z[1]*z[2]^2-a[5]*a[9]*z[1]*z[2]^2-a[6]*a[7]*z[1]^2*z[2]-a[6]*a[8]*z[1]*z[2]^2-a[7]*a[9]*z[1]^2*z[2]-a[8]*a[9]*z[1]*z[2]^2+a[1]*a[7]*z[1]^2+a[1]*a[8]*z[1]*z[2]-a[2]*a[6]*z[1]^2-a[2]*a[9]*z[1]*z[2]-a[3]*a[6]*z[1]*z[2]-a[3]*a[9]*z[2]^2+a[4]*a[7]*z[1]*z[2]+a[4]*a[8]*z[2]^2;
  f2 = -a[1]*a[8]*z[1]^3*z[2]^2+a[2]*a[9]*z[1]^3*z[2]^2+a[3]*a[6]*z[1]^3*z[2]^2+2*a[3]*a[9]*z[1]^4*z[2]-a[4]*a[7]*z[1]^3*z[2]^2-2*a[4]*a[8]*z[1]^4*z[2]-t*a[4]*z[1]^3*z[2]-t*a[8]*z[1]^3*z[2]+2*a[1]*a[8]*z[1]^3*z[2]+a[2]*a[4]*z[1]^3*z[2]+a[2]*a[8]*z[1]^3*z[2]+a[3]*a[4]*z[1]^3*z[2]+a[3]*a[5]*z[1]^3*z[2]+a[3]*a[8]*z[1]^3*z[2]+a[4]*a[5]*z[1]^3*z[2]+a[4]*a[6]*z[1]^3*z[2]+2*a[4]*a[7]*z[1]^3*z[2]+4*a[4]*a[8]*z[1]^3*z[2]+a[4]*a[9]*z[1]^3*z[2]+a[5]*a[8]*z[1]^3*z[2]+a[5]*a[9]*z[1]^3*z[2]+a[6]*a[8]*z[1]^3*z[2]+a[8]*a[9]*z[1]^3*z[2]-a[1]*a[8]*z[1]^3+a[1]*a[8]*z[1]*z[2]^2+a[2]*a[3]*z[1]^3-a[2]*a[3]*z[1]*z[2]^2-a[4]*a[7]*z[1]^3+a[4]*a[7]*z[1]*z[2]^2+a[6]*a[9]*z[1]^3-a[6]*a[9]*z[1]*z[2]^2+t*a[4]*z[1]*z[2]+t*a[8]*z[1]*z[2]-2*a[1]*a[8]*z[1]*z[2]-a[2]*a[4]*z[1]*z[2]-a[2]*a[8]*z[1]*z[2]-a[3]*a[4]*z[1]*z[2]-a[3]*a[5]*z[1]*z[2]-a[3]*a[8]*z[1]*z[2]-a[4]*a[5]*z[1]*z[2]-a[4]*a[6]*z[1]*z[2]-2*a[4]*a[7]*z[1]*z[2]-4*a[4]*a[8]*z[1]*z[2]-a[4]*a[9]*z[1]*z[2]-a[5]*a[8]*z[1]*z[2]-a[5]*a[9]*z[1]*z[2]-a[6]*a[8]*z[1]*z[2]-a[8]*a[9]*z[1]*z[2]+a[1]*a[8]*z[1]-a[2]*a[9]*z[1]-a[3]*a[6]*z[1]-2*a[3]*a[9]*z[2]+a[4]*a[7]*z[1]+2*a[4]*a[8]*z[2];
  f3 = -2*a[1]*a[7]*z[1]*z[2]^4-a[1]*a[8]*z[1]^2*z[2]^3+2*a[2]*a[6]*z[1]*z[2]^4+a[2]*a[9]*z[1]^2*z[2]^3+a[3]*a[6]*z[1]^2*z[2]^3-a[4]*a[7]*z[1]^2*z[2]^3-t*a[1]*z[1]*z[2]^3-t*a[7]*z[1]*z[2]^3+a[1]*a[2]*z[1]*z[2]^3+a[1]*a[3]*z[1]*z[2]^3+a[1]*a[5]*z[1]*z[2]^3+a[1]*a[6]*z[1]*z[2]^3+4*a[1]*a[7]*z[1]*z[2]^3+2*a[1]*a[8]*z[1]*z[2]^3+a[1]*a[9]*z[1]*z[2]^3+a[2]*a[5]*z[1]*z[2]^3+a[2]*a[7]*z[1]*z[2]^3+a[3]*a[7]*z[1]*z[2]^3+2*a[4]*a[7]*z[1]*z[2]^3+a[5]*a[6]*z[1]*z[2]^3+a[5]*a[7]*z[1]*z[2]^3+a[6]*a[7]*z[1]*z[2]^3+a[7]*a[9]*z[1]*z[2]^3+a[1]*a[8]*z[1]^2*z[2]-a[1]*a[8]*z[2]^3-a[2]*a[3]*z[1]^2*z[2]+a[2]*a[3]*z[2]^3+a[4]*a[7]*z[1]^2*z[2]-a[4]*a[7]*z[2]^3-a[6]*a[9]*z[1]^2*z[2]+a[6]*a[9]*z[2]^3+t*a[1]*z[1]*z[2]+t*a[7]*z[1]*z[2]-a[1]*a[2]*z[1]*z[2]-a[1]*a[3]*z[1]*z[2]-a[1]*a[5]*z[1]*z[2]-a[1]*a[6]*z[1]*z[2]-4*a[1]*a[7]*z[1]*z[2]-2*a[1]*a[8]*z[1]*z[2]-a[1]*a[9]*z[1]*z[2]-a[2]*a[5]*z[1]*z[2]-a[2]*a[7]*z[1]*z[2]-a[3]*a[7]*z[1]*z[2]-2*a[4]*a[7]*z[1]*z[2]-a[5]*a[6]*z[1]*z[2]-a[5]*a[7]*z[1]*z[2]-a[6]*a[7]*z[1]*z[2]-a[7]*a[9]*z[1]*z[2]+2*a[1]*a[7]*z[1]+a[1]*a[8]*z[2]-2*a[2]*a[6]*z[1]-a[2]*a[9]*z[2]-a[3]*a[6]*z[2]+a[4]*a[7]*z[2];
  f4 = S11*S22 - S21*S21;
END;
