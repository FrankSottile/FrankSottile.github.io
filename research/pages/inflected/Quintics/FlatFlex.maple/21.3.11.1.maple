#21.111.2.1maple
#
# Frank Sottile
# 25 January 2001
# Amherst, Massachusetts
#
#  There are three ways to choose the conditions
# Claw, Cusp, Flex, Planar Flex:    One Crossing
# 21 * 111 * 2 * 1
# -1   oo    0   1 
#
# Claw, Cusp, Planar Flex, Flex:    No Crossing
# 21 * 111 * 2 * 1
#  0   oo    1  -1 
#
# Claw,  Flex, Cusp, Planar Flex:    No Crossing
# 21 * 111 * 2 * 1
# -1   oo    1   0
#
interface(quiet=true):
with(plots):
plotsetup(x11,plotoptions=`width=3in,height=2.5in`):
read(`equations.maple`):
read(`EasySolve.maple`):

BM:=matrix([
[1,s,s^2,  s^3,s^4  ,   s^5],
[0,1,2*s,3*s^2,4*s^3, 5*s^4],
[0,0, 1 ,3*s  ,6*s^2,10*s^3],
[0,0, 0 , 1   ,4*s  ,10*s^2],
[0,0, 0 , 0   ,  1  , 5*s  ],
[0,1, 0 , 0   ,  a  ,  d   ],
[0,0, 1 , 0   ,  b  ,  e   ],
[0,0, 0 , 1   ,  c  ,  f   ]]):

M:=linalg[submatrix](BM,[1,2,3,4,6,7,8],[1,2,3,4,5,6]):

Coords:=matrix([
[0,1, 0 , 0   ,  a  ,  d   ],
[0,0, 1 , 0   ,  b  ,  e   ],
[0,0, 0 , 1   ,  c  ,  f   ]]):

Ker:={[1, 0, 0, 0, 0, 0], [0, -a, -b, -c, 1, 0], [0, -d, -e, -f, 0, 1]}:
###############################################################
#
# Claw, Cusp, Flex, Planar Flex
# 21 * 111 * 2 * 1
# -1   oo    0   1 
#
equations:=[TwoOneEq(M,-1)[],TwoEq(M,0)[],OneEq(M,1)]:
Eqs:=Groebner[gbasis](equations,plex(a,b,c,d,e,f)):
Polys:=MakePolys(Ker,Eqs):
y:=Polys[1][1]:
z:=Polys[1][2]:
x:=Polys[1][3]:
y:=x+y+3*z:           zero:=fsolve(y=0,s):
z:=(z-subs(s=zero-.0001,z/x)*x):
teps:=.2: seps:=.2:
Xs:=(x-z)/y:
Ys:=z/y:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):
plotsetup(gif,plotoutput=`21.111.2.1.a.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(t=0,Xt),subs(t=0,Yt)]},symbol=circle,color=magenta):
PP:=pointplot({[subs(s=1,Xs),subs(s=1,Ys)]},symbol=circle,color=red):
Q:=plot({[Xs,Ys,s=zero+seps..1],[Xt,Yt,t=1/zero+teps..1]},
          numpoints=200,color=blue,axes=none):
  display(Q,P,PP);
################################################################
#
# Claw, Cusp, Planar Flex, Flex,
# 21 * 111 * 2 * 1
# 0    oo   -1   1 
#
equations:=[TwoOneEq(M,0)[],TwoEq(M,-1)[],OneEq(M,1)]:
Eqs:=Groebner[gbasis](equations,plex(a,b,c,d,e,f)):
Polys:=MakePolys(Ker,Eqs):
y:=Polys[1][1]:
z:=Polys[1][2]:
x:=Polys[1][3]:
y:=x+2*y:           zero:=fsolve(y=0,s):
z:=(z-subs(s=zero-.0001,z/x)*x):
teps:=.2: seps:=.14:
Xs:=(x-z)/y:
Ys:=z/y:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):
plotsetup(gif,plotoutput=`21.111.2.1.b.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(t=0,Xt),subs(t=0,Yt)]},symbol=circle,color=magenta):
PP:=pointplot({[subs(s=1,Xs),subs(s=1,Ys)]},symbol=circle,color=red):
Q:=plot({[Xs,Ys,s=zero+seps..1],[Xt,Yt,t=1/zero+teps..1]},
          numpoints=200,color=blue,axes=none):
  display(Q,P,PP);
################################################################
#
# Claw, Planar Flex, Cusp, Flex,
# 21 * 111 * 2 * 1
# -1    oo   1   0 
#
equations:=[TwoOneEq(M,-1)[],TwoEq(M,1)[],OneEq(M,0)]:
Eqs:=Groebner[gbasis](equations,plex(a,b,c,d,e,f)):
Polys:=MakePolys(Ker,Eqs):
y:=Polys[1][1]:
z:=Polys[1][2]:
x:=Polys[1][3]:
y:=x+3*y:           zero:=fsolve(y=0,s):
z:=(z-subs(s=zero-.0001,z/x)*x):
teps:=.2: seps:=.2:
Xs:=(x-z)/y:
Ys:=z/y:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):
plotsetup(gif,plotoutput=`21.111.2.1.c.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(t=0,Xt),subs(t=0,Yt)]},symbol=circle,color=magenta):
PP:=pointplot({[subs(s=0,Xs),subs(s=0,Ys)]},symbol=circle,color=red):
Q:=plot({[Xs,Ys,s=zero+seps..1],[Xt,Yt,t=1/zero+teps..1]},
          numpoints=200,color=blue,axes=none):
  display(Q,P,PP);





