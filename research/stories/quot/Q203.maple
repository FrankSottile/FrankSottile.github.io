#Q203.maple
#
# Frank Sottile
# Muenchen
# 15 September 2005
########################################################################
#
#  This will draw a moment graph for the quot scheme 
#    Q_2(0,3) 
#
########################################################################
interface(quiet=true):
with(plots):
with(plottools):
plotsetup(x11,plotoptions="width=3in,height=2.5in"):
###########################################################################
#
#   These are the relative lengths
#

eps:=0.09:    # Displacement for the central dots
e:=1:         # The horizontal scale  
f:=1.5:       # The vertical scale  
rad:=0.07:    # The radius of the spheres
###########################################################################
#
#  Rotates a vector (as a list) L through angle th
#
Rot := proc(L,th)
  local TH:
  TH:=th*Pi/180:
  return([cos(TH)*L[1]+sin(TH)*L[2],
         -sin(TH)*L[1]+cos(TH)*L[2],
          L[3]])
end proc:
###########################################################################
# 
#    Scematic of 1/3 of the skeleton and the numbering 
# (The others are +7 and +14 in the list)
#
#
#  1 (e,0,2f)   *\ 
#               | \
#               ^  \
#              | |  \
#              | |   \
#            --|-|----*  (e, s3*e, f)   5
#              | |    |\
# 2 (e-ep,0,0) | |    ||
#             -*-|-\  ||
#              | |  >=*| (e, s3*e, 0)   7
#             -|-*-/  ||
# 3 (e+ep,0,0  | |    ||
#              | |    |/
#              | |    *  (e, s3*e, f)   6
#              | |   /
#              | |  /
#               v  /
#               | /
#  4  (e,0,-2f) */
#
#
s3:=sqrt(3):
V:=[ [e, 0, 2*f], [e-eps,0,0], [e+eps,0,0], [e, 0, -2*f],
    [e, s3*e, f], [e, s3*e,-f], [e, s3*e, 0]]:
##########################################################
#
#   The horizontal edges in the central region are interesting.
# These correspond to the three `horizontal families'.  Here is 
# a scematic of the one in the direction E12.  It has positive
# orientation left-to-right.  
#
#                     *   
#                -  -+-+-  -
#       *       /   *       \     *
#       -+-+-  <             >  -+-+-
#       *       \   *       /     *
#                -  -+-+-  -
#                     *
#    In the middle diagram on the top, the positive box (*) moved
# in the positive direction.   Our convention for drawing the moment
# multigraph is that this node is displaced inward.
#
##########################################################
#
# Vv := vertices
# Vp := endpoints of vertical segments
# Hp := endpoints of horizontal segments
#  C := the curved segments

Vv:=[V[],seq(Rot(V[i],120),i=1..7),seq(Rot(V[i],240),i=1..7)]:

Vp:=[ [15,16],[17,18], [ 1, 3],[ 2, 4],[ 5, 6],
      [ 1, 2],[ 3, 4], [ 8,10],[ 9,11],[12,13],
      [ 8, 9],[10,11], [15,17],[16,18],[19,20]]:
Hp:=[
      [ 1, 8],[ 8,15],[15, 1], # small top triangle
      [ 5,12],[12,19],[19, 5], # big upper triangle
      [ 2,10],[ 9,17],[16, 3], # innermost ring
      [ 3, 7],[ 7,16],[10,14], # outer medial ring
      [14, 2],[17,21],[21, 9], # 
      [ 1, 5],[ 1,12],[15, 5], #diagonal edges
      [15,19],[ 8,12],[ 8,19], #
#
#   This is the lower part
#
      [ 4,11],[11,18],[18, 4], # small bottom triangle
      [ 6,13],[13,20],[20, 6], # big lower triangle
      [ 3, 9],[10,16],[17, 2], # innermost ring
      [ 2, 7],[ 7,17],[ 9,14], # outer medial ring
      [14, 3],[16,21],[21,10], #     
      [ 4, 6],[ 4,13],[18, 6], # diagonal edges
      [18,20],[11,13],[11,20]  #     
]:

#
#   Now we make the space curve of the curved vertical segments.
#  These are arcs, and stored in C
#
al:=5:
r:=sqrt((1+al)^2*4*e^2+f^2):
Th0:=arcsin(f/r):
C:=[r*cos(T)/2-al*e, s3*(r*cos(T)/2-al*e),  r*sin(T)]:
Cc:=[C, Rot(C,120), Rot(C,240)]:
#########################################################################


#########################################################################
#
#  The next few lines are for the static picture
#

#  this is a pointer for the horizontal lines
macro(mb = COLOR(RGB, 0.000,0.5, 1)):
macro(lb = COLOR(RGB, 0.000,0.7, 1)):
macro(rm = COLOR(RGB, 1,0.000,0.7)):
macro(dg = COLOR(RGB, 0, 0.9, 0)):


V:=Vv: C:=Cc:
Dlist:=[
   seq(sphere(V[i], rad, color=dg, grid=[11,11]), i=1..21), 
#
   seq(line(V[Vp[i][1]],V[Vp[i][2]], color=mb,  thickness=2),i=1..5),
   spacecurve(C[1],T=-Th0..Th0,      color=mb,  thickness=2),
   seq(line(V[Vp[i][1]],V[Vp[i][2]], color=lb,  thickness=2),i=6..10),
   spacecurve(C[2],T=-Th0..Th0,      color=lb,  thickness=2),
   seq(line(V[Vp[i][1]],V[Vp[i][2]], color=blue,thickness=2),i=11..15),
   spacecurve(C[3],T=-Th0..Th0,      color=blue,thickness=2),
#
   seq(line(V[Hp[i][1]],V[Hp[i][2]], color=red, thickness=2),i=1..21),
   seq(line(V[Hp[i][1]],V[Hp[i][2]], color=rm, thickness=2),i=22..42)]:

#plotsetup(gif,plotoutput="Q213.test.gif",plotoptions=`height=780,width=500`):
#display(Dlist,scaling=constrained,style=patchnogrid,orientation=[14,70]);

#
#   The following produces the movie
#
#########################################################################
DSeq:=[]:
#N:=61:
#N:=3:
N:=180:
for TH from 0 to (N-1) by 1 do 
# th:=120*TH/N:
 th:=360*TH/N:
 V:=[seq(Rot(Vv[i],th),i=1..21)]:
 C:=[seq(Rot(Cc[i],th),i=1..3)]:
  DSeq:=[op(DSeq),
       [seq(sphere(V[i], rad, color=green, grid=[11,11]), i=1..21), 
#        seq(line(V[Vp[i][1]],V[Vp[i][2]], color=blue, thickness=2),i=1..15),
#        seq(spacecurve(C[i],T=-Th0..Th0,thickness=2, color=blue),i=1..3),
   seq(line(V[Vp[i][1]],V[Vp[i][2]], color=mb,  thickness=2),i=1..5),
   spacecurve(C[1],T=-Th0..Th0,      color=mb,  thickness=2),
   seq(line(V[Vp[i][1]],V[Vp[i][2]], color=lb,  thickness=2),i=6..10),
   spacecurve(C[2],T=-Th0..Th0,      color=lb,  thickness=2),
   seq(line(V[Vp[i][1]],V[Vp[i][2]], color=blue,thickness=2),i=11..15),
   spacecurve(C[3],T=-Th0..Th0,      color=blue,thickness=2),

   seq(line(V[Hp[i][1]],V[Hp[i][2]], color=red, thickness=2),i=1..21),
   seq(line(V[Hp[i][1]],V[Hp[i][2]], color=magenta, thickness=2),i=22..42)]]:

end do:
time();
plotsetup(gif,plotoutput="movie.gif",plotoptions=`height=600,width=400`):

display(seq(display(op(DSeq[k]),scaling=CONSTRAINED,style=patchnogrid),
   k=1..nops(DSeq)),scaling=CONSTRAINED,insequence=true
       ,orientation=[0,70]);

time();
