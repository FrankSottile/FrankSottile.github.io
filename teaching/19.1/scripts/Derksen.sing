//Derksen.sing
//
// Frank Sottile
// 7 March 2019
//
// This studies a partucularly interesting Schubert problem.
////////////////////////////////////////////////////////////////
LIB "random.lib";
LIB "matrix.lib"; 
LIB "linalg.lib"; 
LIB "rootsur.lib";

proc NReal(ideal II) {
 B= kbase(II); 
 F= charpoly(coeffs(reduce(var(nvars(R))*B,II),B), varstr(nvars(R)));
 return(nrroots(F))
}

option(redSB);

//ring S = 101, (x(1..8)), dp;
ring R = 0, (x(1..8)), dp;
int ii,j;
ideal  I, B;
matrix L, M;
poly F;

matrix Coords[8][4]= 1  , 0  , 0  , 0  ,   0  , 1  , 0  , 0  ,  
                    x(1),x(2), 0  , 0  ,  x(3),x(4), 0  , 0  ,
	             0  , 0  , 1  , 0  ,   0  , 0  , 0  , 1  ,
		     0  , 0  ,x(5),x(6),   0  , 0  ,x(7),x(8);

print(Coords);

 L = random(8,8,4);
 M = random(8,8,4);
 I = std( minor(concat(Coords,L),7) + minor(concat(Coords,M),7));
 dim(I), mult(I);
 NReal(I);

//
quit;

for (ii=1; ii<=10; ii=ii+1) {
 L = random(8,8,4);
 M = random(8,8,4);
 I = std( minor(concat(Coords,L),7) + minor(concat(Coords,M),7));
 NReal(I);
 setring(S);
 factorize(imap(R,F),2);
 setring(R);
}

quit;
intvec NROOTS=0,0,0,0,0,0,0;

for (ii=1; ii<=100; ii=ii+1) {
 L = random(8,8,4);
 M = random(8,8,4);
 I = std( minor(concat(Coords,L),7) + minor(concat(Coords,M),7));
 j =  NReal(I);
 NROOTS[j+1] = NROOTS[j+1]+1;
}

NROOTS;

//
quit;

for (ii=1; ii<=10; ii=ii+1) {
 L = random(8,8,4);
 M = random(8,8,4);
 ring S = 101, (x(1..8)), dp;
 I = std( minor(concat(Coords,L),7) + minor(concat(Coords,M),7));
 setring(S);
 factorize(imap(R,F),2);
 setring(R);
}
