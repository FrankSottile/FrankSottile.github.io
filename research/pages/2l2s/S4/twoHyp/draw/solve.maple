#solve.maple
#
#  This is an attempt to, given a quadratic form, diagonalize it.
#
#   We solve     M^T Q M = diag(-1, 1, 1, -1)  
#
#           [ r ,  0 ,  0 ,  0 ]
# where M = [ a ,  d ,  f ,  0 ]  
#           [ b ,  0 ,  g ,  x ] 
#           [ c ,  e ,  0 ,  y ]
#
#   Then  M^(-1) * [ 1 ] =  [  r  ]
#                  [ X ]    [ L_1 ]
#                  [ Y ]    [ L_2 ]
#                  [ Z ]    [ L_3 ]
#
#  and the quadratic form becomes  L_1^2 + L_2^2 - L_3^2 - r^2,
#
#  and we can then plot it parametrically
#
#  Since this computation passes through Singular, we let s := 2^(1/2)
#
#
interface(quiet=true):
Quadric := (a,b,c,d,e,f,g,h,x,y) ->
  linalg[matrix]([
   [ a , b , c , d ],
   [ b , e , f , g ],
   [ c , f , h , x ],
   [ d , g , x , y ]]):

M:=linalg[matrix]([
     [ r ,  0 ,  0 ,  0 ],
     [ a ,  d ,  0 ,  0 ], 
     [ b ,  e ,  x ,  0 ], 
     [ c ,  f ,  y ,  z ]]):

################################################################
#
#  This is for the first ideal (Number 5)
#
#Q:=Quadric(2^(1/2)*g^2, (1-2^(1/2))*g^2/2, -g*2^(1/2), -g,
#           -g^2, -g, g, -2*(2+2^(1/2)), 1, 2*(1+2^(1/2))):#
#Q:=Quadric(s*g^2, (1-s)*g^2/2, -g*s, -g,
#           -g^2, -g, g, -2*(2+s), 1, 2*(1+s)):
####################################################################
#
#  This is for the second ideal (Number 6)
#
#Q:=Quadric(g^2*(2+2^(1/2))/(1+2^(1/2)), 1/2*g^2/(1+2^(1/2)),
#           g*(2+2^(1/2))/(1+2^(1/2)), g, -g^2, -g, g, 
#           -4-2*2^(1/2), 1, 2+2*2^(1/2)):
#Q:=Quadric(s*g^2, 1/2*g^2/(1+s), g*s, 
#           g, -g^2, -g, g, -4-2*s, 1, 2+2*s):
####################################################################
#
#  This is for the third ideal (Number 7)
#
#Q11:=Quadric(2^(1/2)*g^2/x, -1/2*g^2/(-1+2^(1/2))/x, 
#             g*(-2+2^(1/2))/(-1+2^(1/2)), -g, g^2/x, g, g, 
#             4*x-2*x*2^(1/2), x, 2*(-1+2^(1/2))*x):
#s:=2^(1/2):
Q:=Quadric(s*g^2, -1/2*(s+1)*g^2, -s*g, -g, g^2, 
           g, g, 4-2*s, 1, 2*(s-1)):

coords:=linalg[vector]([1,X,Y,Z]):
Coords:=linalg[matrix]([[1],[X],[Y],[Z]]):

A:=linalg[multiply]( linalg[transpose](M), Q, M ):

Eqs:=[
A[1,1]-1,A[1,2]  ,A[1,3]  ,A[1,4]  ,
A[2,1]  ,A[2,2]-1,A[2,3]  ,A[2,4]  ,
A[3,1]  ,A[3,2]  ,A[3,3]-1,A[3,4]  ,
A[4,1]  ,A[4,2]  ,A[4,3]  ,A[4,4]-1]:

for i from 1 to nops(Eqs) do
 eq:=Eqs[i]:
 if not(type(eq,`polynom`)) then Eqs[i]:=simplify((s-1)*eq): fi:
od:

lprint(`option(redSB);`);
lprint(`int T = timer;`);
#lprint(`ring R = 101, (g,s,r,a,b,c,d,e,f,x,y,z), dp;`);
lprint(`ring R = 0, (d,e,f,x,y,z,c,b,a,r,s,g), lp;`);
lprint(`ideal I = s^2-2,`);
for eq in Eqs do
 lprint(primpart(eq),`,`);
od:
lprint(`0;`);
lprint(`ideal H = std(I);`);
lprint(`short=0;`);
lprint(`degree(H);`);
lprint(`H;`);
lprint(`quit;`);

quit;

