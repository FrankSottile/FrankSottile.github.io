#LtoQ.maple
#
#  Frank Sottile
#  5 April 2002
#  Flight to Paris
#
###################################################
read(LodayProcedures):

#####################################################################
Des := proc(u)
#
#  The descents of u
#
 local i, des:
 des:=[]: 
 for i from 1 to nops(u)-1 do
  if u[i]>u[i+1] then des:=[des[],i]: fi:
 od:
 des
end:
#########################################################################
LtoQ := proc(tree)
 local Psi, Pair, alpha,Pr:
 Psi:=[]:
 for Pair in MakeLMon(tree) do
  alpha:=SetToComp(Des(Pair[2]),nops(tree)):   
  for Pr in QFtoM(alpha) do
   Psi:=[Psi[],[Pair[1]*Pr[1],Pr[2]]]:
  od:
 od:
 Combine(Psi)
end:
########################################################################
StoL := proc(w)
 local Psi, Pair, tree, Pr:
 Psi:=[]:
 for Pair in MakeMonom(w) do
  tree:=makeTree(Pair[2]):
  for Pr in LFtoM(tree) do
   Psi:=[Psi[],[Pair[1]*Pr[1],Pr[2]]]:
  od:
 od:
 Combine(Psi)
end:
########################################################################



for w in combinat[permute](4) do
lprint(w,StoL(w));
od:
quit;



for tree in Trees[5] do
lprint(tree,LtoQ(tree));
od:

quit;



