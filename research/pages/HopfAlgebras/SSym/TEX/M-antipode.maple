#M-antipode.maple
#
#  This computes the antipode in the M-basis
#
#  We use the formula
#      m ( s \otimes 1 )\delta M_w = 0
#  to compute the antipode recursively
#  S[w]:=antipode of w
#
read(`MalvenutoProcedures`):
######################################################################
MakeTerm:=proc(T,X)
#
#   This procedure creates a TeX-ed term of algebra,
#   given a pair T and a symbol X for the variables
#
local Str, n1, j, n2; 
 if T[1]=1 then Str:= ``: fi:
 if T[1]=-1 then Str:= `-`: fi:
 if abs(T[1])<>1 then Str:=cat(convert(T[1],symbol)): fi:
 n1:=nops(T[2]):
 if n1=0 then 
  Str:=cat(Str,`1  `):
 else
  Str:=cat(Str,`\\`,convert(X,symbol),`_{`):
  for j from 1 to n1 do
   Str:=cat(Str,convert(T[2][j],symbol)):
  od:
  Str:=cat(Str,`} `):
 fi:
Str
end:
##################################################################################
Format := proc(L,X)
#
#  Given a list L, this makes the formal sum L in TeX
#
local  Str, j;
 Str:=MakeTerm(L[1],X):
 if nops(L)=1 then Str:=cat(Str,`$.`): fi:
 if nops(L)>1 then
  for j from 2 to nops(L) do
   if L[j][1]>0 then 
     Str:=cat(Str,`+`):
   fi:
    Str:=cat(Str,MakeTerm(L[j],X)):
   if j=nops(L) then 
     Str:=cat(Str,`$.`): 
   fi:
   if j<>nops(L) then
    if j mod 9 = 0 then  
       Str:=cat(Str,`$\\vspace{-6pt}\n\n      `): 
       Str:=cat(Str,`\\hspace{10pt}\n      $`):
    fi:
    if (j mod 9 <> 0) and (j mod 3 = 0) then Str:=cat(Str,`\n       `): fi:
   fi:
  od:
 fi:
 Str
end:
##################################################################################
file:=fopen(`M-Antipode.tex`,WRITE):

fprintf(file,`\\documentclass[12pt]{article}\n`):
fprintf(file,`\\usepackage{amssymb}\n`):
fprintf(file,`\\newcommand{\\M}{\\mathcal{M}}\n`):
fprintf(file,`\\newcommand{\\F}{\\mathcal{F}}\n`):
fprintf(file,`\\headheight=8pt \\topmargin=-20pt\n`): 
fprintf(file,`\\textheight=670pt \\textwidth=472pt\n`):
fprintf(file,`\\oddsidemargin=-2pt \\evensidemargin=-2pt\n\n`):
fprintf(file,`\\begin{document}\n\n`):
fprintf(file,`\\begin{center}\\Large\\bf\n`):
fprintf(file,`Antipode of the Monomial basis of `): 
fprintf(file,`$\\mathfrak{S}\\mathit{Sym}$\\\\ \n`):
fprintf(file,`M. Aguiar \\& F. Sottile \\\\ \n`):
fprintf(file,`16 November 2001 \n`):
fprintf(file,`\\end{center}\n`):

fprintf(file,`%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%`):
fprintf(file,`\n\n`):


S[[]] :=[[1,[]]]:
S[[1]]:=[[-1,[1]]]:
S[[1,2]]:=[[-1, [1, 2]]]:
S[[2,1]]:=[[1, [1, 2]], [1, [2, 1]]]:

for n from 1 to 4 do 
 fprintf(file,cat(`\\hspace{-50pt}{\\bf Antipodes of total degree `,n,`:}`)):
 fprintf(file,`\\vspace{-10pt}\n\n`):
 fprintf(file,`\\begin{enumerate}\n`):
 fprintf(file,`%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%`):
 fprintf(file,`\n\n`):
 for w in combinat[permute](n) do
  CoProdW:=Coproduct(w):

  N:=nops(CoProdW):
  S[w]:=[]:
##########################################################################
#   CoProd(w) has the form [ [1, [], w], ..., [1, w, []] ]
##########################################################################
  for j from 1 to N-1 do
 ##########################################################################
 #  Loops over the non-final terms [ Coeff, x, v] of the coproduct
 ##########################################################################
   Term:=CoProdW[j]:
   x := Term[2]:
   v := Term[3]:
   for L in S[x] do
 ##########################################################################
 #  Loops over terms [ Coeff, u] in the antipode of the permutation x
 ##########################################################################
    u:=L[2]: 
    for pair in FtoM(Prod(u,v)) do
  ##########################################################################
  # Loops over the terms in the product M_u*M_v and makes the coefficients
  ##########################################################################
     pair[1]:=-Term[1]*L[1]*pair[1]:
     S[w]:=[S[w][],pair]:
    od:
   od:
  od:
  fprintf(file,cat(`\\item[]\\hspace{-50pt}$`)):
  fprintf(file,cat(`S(`,MakeTerm([1,w],\M),`) =\n        `)):
  fprintf(file,cat(Format(Sort(Combine(S[w])),\M),`\\vspace{-8pt}\n`)):
 od:
 fprintf(file,cat(`\\end{enumerate}\n\n`)):
 fprintf(file,`\\hspace{-50pt}\\underline{\\rule{430pt}{1pt}}\\medskip\n\n`):
od:


fprintf(file,`\\end{document}\n`):
fclose(file):
time();
quit;
