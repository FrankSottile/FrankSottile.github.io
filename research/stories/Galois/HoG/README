Project: HoG
Authors: Anton Leykin and Frank Sottile

Description: The project is to create software based 
             on numerical homotopy continuation techniques 
             to compute the Galois groups of Schubert problems.

----------------------------------------------------------------------------------------

Completing the installation:

(1) Refer to the webpage (http://www.math.tamu.edu/~sottile/stories/Galois/) 
    for weblinks to the required software.
(2) Read bin/README; make sure all necessary executable files (or links to them) 
    are present in bin/.
(3) It is assumed a version of Maple 10+ is installed and GAP can be executed 
    by typing "gap".
-----------------------------------------------------------------------------------------

Running scripts: 

(1) Edit the parameters in the script to your liking.
(2) Execute in the command line: e.g, 

	maple pieri.maple

    To customize parameters:
    (2a) edit pieri.maple
    (2b) use the following typical call (see pieri.maple for possible options)

PROMPT> maple <<!
SchubertData := [42, [[1, 0, 0], [1, 0, 0], 7]]: #Schubert problem
seed := 2: #random seed
software := "PHCpack": #continuation software
our_strategy := short: #strategy
read "pieri.maple";
system("date");
!

 
(3) Execute from a Maple worksheet: e.g.,
	read "pieri.maple";
	
----------------------------------------------------------------------------------------- 
Files/dirs:

bin/ 	        - running directory for PHCmaple

procedures	- the main file containing Maple procedures used in the project;

makeProblem.maple	- a script that runs early experimentations 
                          that use Maple's "group" package; 

GrassmannianProblems/	- contains the scripts for generating all Schubert problems 
                          on Grassmanians, and for running Pieri homotopy;

pieri.maple 		- a script that executes the computation of a Galois group 
                          of a Schubert problem on a Grassmanian. 

PIERI-*/	- results of the Pieri homotopy computations;
                  The output is stored in a collection of files corresponding 
                  to the nodes of the DAG of the subproblems of the root problem.

For example, here is the structure of 130300.2 

PHN_lambda := [1, 0, 0]; PHN_mu := [3, 3, 0]; PHN_num := 2;
PHN_L := ... a list of matrices used to set up the polynomial formulation of the problem ... ;
PHN_children := ... the list of children in the DAG of Shubert subproblems ... ;
PHN_master := ... the master set of the solutions to the polynomial system ... ; 
PHN_perms := ... list of permutations generating the full symmetric group ... ;
PHN_is_full_symmetric := true ;

The computation is done through a set of recursive functions; during the computation 
the above "structure" of the output may be not complete for some nodes. 

--------------------------------------------------------------------------------------
