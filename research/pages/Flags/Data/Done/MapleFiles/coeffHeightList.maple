#CoefficientHeightTable
#
#  This creates a 3-dimensional table:  Necklaces x Coefficient of x^{i-1},
#       An then in each cell, a list of the lengths of that coefficient.
#
#############################################################################
read(`../MapleFiles/procedures.maple`);
read(`data`);
read(`temp.out`):
read(`coeffHeight`):
#############################################################################
#
#  temp.out contains the output from the Singular computation.  Specifically,
#         Eliminants   := list of univariate (in the variable a) eliminants 
#                          one for each necklace, with an extra `0' at the end.
#         SingularTime := Is the CPU time for the Singular computation.
#
#############################################################################
Height := proc(Number)
 local N:
 if Number=0 then N:=1: else N:=abs(Number): fi:
 ceil(1+ log10(1.0*N))
end:

C:=[]:
for i from 1 to nops(Eliminants) do 
 if (Eliminants[i] <> 0) then 
  C:=[C[], Height(subs(a=0,Eliminants[i]))]:
  for j from 1 to degree(Eliminants[i]) do 
   C:=[C[], Height(coeff(Eliminants[i],a^j))]:
  od:
 fi:
od:
file := fopen(`coeffHeight`,WRITE):
fprintf(file,"COEFFS:=[%d",C[1]):
for i from 2 to nops(C) do 
 fprintf(file, ",%d",C[i]):
od:
for i from 1 to nops(COEFFS) do 
 fprintf(file, ",%d",COEFFS[i]):
od:
 fprintf(file, "]:\n"):
fclose(file):
quit;
