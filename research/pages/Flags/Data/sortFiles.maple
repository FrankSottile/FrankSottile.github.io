#sortFiles.maple
#
#  This file sorts the enumerative problems in ListOfFiles by
#  number of solutions
#
interface(quiet=true):
#########################################################
read("temp.list"):
Indices:=[]:
for IND in indices(Data) do 
 Indices:=[Indices[],IND[]]:
od:

file := fopen("temp.list", WRITE):

for ind in Indices do 
 L:=Data[ind]:
 degrees:={}:
 for problem in L do 
  read(sprintf("%a/%s.data",ind,problem)):
  degrees:=degrees union {NumberOfSolutions}:
 od:
 for deg in degrees do 
  DEG[deg]:=[]:
 od:
 for problem in L do 
  read(sprintf("%a/%s.data",ind,problem)):
  DEG[NumberOfSolutions]:=[problem,DEG[NumberOfSolutions][]]:
 od:
 data[ind]:=[]:
 for deg in sort(degrees) do 
  data[ind]:=[DEG[deg][],data[ind][]]:
 od:
 fprintf(file, "Data[%a]:=[\n",ind):
 for problem in data[ind] do  
  fprintf(file, " \"%s\",\n",problem):
 od:
 fprintf(file, " NULL]:\n"):
od:

fclose(file):