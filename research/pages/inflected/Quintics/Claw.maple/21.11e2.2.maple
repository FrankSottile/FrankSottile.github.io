#21.11e2.2maple
#
# Frank Sottile
# 16 January 2001
# Lubbock, Texas
#
# Here, we draw the maximally inflected quintics with a singularity 
# of type 21, two planar points and a cusp.  There are two different 
# possible choices for the singularities in S^1, and we do both
#
#  Interestingly, these curves can have only two or no crossings
#
# 21 * 2 * 11 * 11
#
#
interface(quiet=true):
with(plots):
plotsetup(x11,plotoptions=`width=3in,height=2.5in`):
read(`equations.maple`):
read(`EasySolve.maple`):

M:=matrix([
[1,s,s^2,  s^3,s^4  ,   s^5],
[0,1,2*s,3*s^2,4*s^3, 5*s^4],
[0,0, 1 ,3*s  ,6*s^2,10*s^3],
[0,0, 0 , 1   ,4*s  ,10*s^2],
[1,a, 0 , d   ,  0  ,  f   ],
[0,0, 1 , b   ,  0  ,  e   ],
[0,0, 0 , 0   ,  1  ,  c   ]]):

Coords:=matrix([
[1,a, 0 , d   ,  0  ,  f   ],
[0,0, 1 , b   ,  0  ,  e   ],
[0,0, 0 , 0   ,  1  ,  c   ]]):

Ker:={[-a, 1, 0, 0, 0, 0], [-f, 0, -e, 0, -c, 1], [-d, 0, -b, 1, 0, 0]}:
################################################################
#
#   Claw, Plane, Cusp, Plane....
#
#   This is for problem 21 * 2 * 11 * 11
#                       oo   0   1    -1 
#
#           Both of these curves are identical
S:=6/5:
equations:=[TwoEq(M,0)[],OneOneEq(M,S)[],OneOneEq(M,-1)[]]:
Eqs:=Groebner[gbasis](equations,plex(a,b,c,d,e,f)):
Polys:=MakePolys(Ker,Eqs):
z:=Polys[1][1]:
y:=Polys[1][2]:
x:=Polys[1][3]:
Den:=z+0.1*(y-x):
zero:=fsolve(Den=0,s):
teps:=.05:
Xs:=(x-8*z)/Den:
Ys:=z/Den:
Ys:=Ys-subs(s=fsolve(Den=0,s)-.0000001,Ys/Xs)*Xs:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):

#plotsetup(gif,plotoutput=`21.11e2.2.a.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=S,Xs),subs(s=S,Ys)],
              [subs(s=-1,Xs),subs(s=-1,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=-4..1],[Xt,Yt,t=(1/zero)+teps..1]},
          numpoints=200,color=blue,axes=none):
  display(Q,P);

##################################################
#
#   Claw, Plane, Plane, Cusp
#
#
#   This is for problem 21 * 11 *  11  * 2
#                       oo    0  27/20   -1 
equations:=[TwoEq(M,-1)[],OneOneEq(M,27/20)[],OneOneEq(M,0)[]]:
Eqs:=Groebner[gbasis](equations,plex(a,b,c,d,e,f)):

Polys:=MakePolys(Ker,Eqs):

z:=Polys[1][1]:
y:=Polys[1][2]:
x:=Polys[1][3]:
z:=z-subs(s=fsolve(y-x,s)-.0000001,z/x)*x:
Den:=z+0.1*(y-x):
zero:=fsolve(Den=0,s):
seps:=.7:
teps:=.03:
Xs:=(x-z/0.08)/Den:
Ys:=z/Den:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):


#plotsetup(gif,plotoutput=`21.11e2.2.b.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=27/20,Xs),subs(s=27/20,Ys)],
              [subs(s=0,Xs),subs(s=0,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=-1..zero-seps],[Xt,Yt,t=-1..(1/zero)-teps]},
          numpoints=200,color=blue,axes=none):
  display(Q,P);

#####################################################################

S:=1/3:
equations:=[TwoEq(M,-1)[],OneOneEq(M,S)[],OneOneEq(M,0)[]]:
Eqs:=Groebner[gbasis](equations,plex(a,b,c,d,e,f)):
Polys:=MakePolys(Ker,Eqs):
z:=Polys[2][1]:
y:=Polys[2][2]:
x:=Polys[2][3]:
z:=z-subs(s=fsolve(y-x,s)-.0000001,z/x)*x:
Den:=x-y:
zero:=fsolve(Den=0,s):
seps:=.5:
teps:=.1:
Xs:=x/Den:
Ys:=z/Den:
Xt:=simplify(subs(s=1/t,Xs)):
Yt:=simplify(subs(s=1/t,Ys)):

#plotsetup(x11,plotoptions=`width=3in,height=2.5in`):
#plotsetup(gif,plotoutput=`21.11e2.2.c.gif`,plotoptions=`height=180,width=180`):
P:=pointplot({[subs(s=S,Xs),subs(s=S,Ys)],
              [subs(s=0,Xs),subs(s=0,Ys)]},symbol=circle,color=green):
Q:=plot({[Xs,Ys,s=zero+seps..1]
         ,[Xt,Yt,t=(1/zero)+teps..1]},numpoints=200,color=blue,axes=none):
display(Q,P);

