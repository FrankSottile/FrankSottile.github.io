#collide.maple
#
# Frank Sottile
# 23 October 2000
#
#  This will plot animated maximally inflected quartics which have
# inflection points at -3, -1, 0, 1, 3, and at S as S ranges from 
# 0 to 2.5, so we shall see 2 collisions.
#
#  For the fifth solution, there is a problem as the A-solution
#  goes to infinity as S --> 0, so I compute A*C, A*D, and A*E,
#  in that case, which are what is used in the rational curve.
#
interface(quiet=true):
with(plots):
Digits:=15:
plotsetup(x11,plotoptions=`width=6in,height=6in`):
IF:=[-3,-1,0,S,1,3]:
RatNorm:=linalg[vector]([t^4,s*t^3,s^2*t^2,s^3*t,s^4]):

#E:=linalg[det](linalg[matrix]([
# [1, s, s^2,  s^3,  s^4],
# [0, 1,2*s ,3*s^2,4*s^3],
# [0, 0, 1  ,3*s  ,6*s^2],
# [1, a, b  ,  0  ,  0  ],
# [0, 1, c  ,  d  ,  e  ]]))/s:
#
# For 0<S<2.6, the B solutions are ordered, and 
# there is an obvious symmetry in the origin of s
#fsolve(coeff(Beq,b^5)=0,s);
#implicitplot(Beq,s=-1/5..4,b=-10..30,grid=[60,60],axes=boxed);

#
# We computed degree 13 polynomials approximating the different 
# solutions, and stored them in data.maple
read(`data.maple`):
Const:=[4,10,8,-2.5,-2]:
Coef:=[4,4,4,-1,1]:

for i from 1 to 5 do
 #linalg[kernel](linalg[matrix]([
 # [1, a, b  ,  0  ,  0  ],
 # [0, 1, c  ,  d  ,  e  ]]));
 if i < 5 then 
  X[i]:=linalg[multiply](linalg[vector]([Aeq[i]*Ceq[i]-Beq[i],-Ceq[i],1,0,0]),RatNorm):
  Y[i]:=linalg[multiply](linalg[vector]([Aeq[i]*Deq[i],-Deq[i],0,1,0]),RatNorm):
  Z[i]:=linalg[multiply](linalg[vector]([Aeq[i]*Eeq[i],-Eeq[i],0,0,1]),RatNorm):
 fi:
 if i = 5 then 
  X[5]:=linalg[multiply](linalg[vector]([ACeq-Beq[5],-Ceq[5],1,0,0]),RatNorm):
  Y[5]:=linalg[multiply](linalg[vector]([ADeq,-Deq[5],0,1,0]),RatNorm):
  Z[5]:=linalg[multiply](linalg[vector]([AEeq,-Eeq[5],0,0,1]),RatNorm):
 fi:
 x[i]:=X[i]/(Z[i]+(Const[i]+Coef[i]*S)*X[i]):
 y[i]:=Y[i]/(Z[i]+(Const[i]+Coef[i]*S)*X[i]):
od:

x[1]:=(1-S/3+S^2/4)*x[1]:
y[1]:=(1-S/3+S^2/4)*y[1]:
x[2]:=x[2]/(1/2-1/10*S-y[2]):
y[2]:=(1+S/3)*y[2]/(1/2-1/10*S-y[2]):
x[3]:=x[3]-y[3]/4:
Den:=eval(2*x[4]-8*S*y[4]/15+1.2+2*S/50):
x[4]:=x[4]/Den:
y[4]:=y[4]/Den:

xr:=[.003,.0024,.0015,.01,.004]:
yr:=[.02 ,.04  ,.03  ,.014,.01]:
for i from 1 to 5 do
Curve[i]:=animate({[subs(t=1,x[i]),subs(t=1,y[i]), s=-1..1],
         [subs(s=1,x[i]),subs(s=1,y[i]), t=-1..1]},
      S=0..2.4,color=blue,numpoints=200,frames=200,
      axes=none,thickness=2):
Infl[i]:=animate({[subs(t=1,s=-3,x[i])+xr[i]*sin(pi),
                   subs(t=1,s=-3,y[i])+yr[i]*cos(pi),pi=0..7],
                  [subs(t=1,s=-1,x[i])+xr[i]*sin(pi),
                   subs(t=1,s=-1,y[i])+yr[i]*cos(pi),pi=0..7],
                  [subs(t=1,s= 0,x[i])+xr[i]*sin(pi),
                   subs(t=1,s= 0,y[i])+yr[i]*cos(pi),pi=0..7],
#                  [subs(t=1,s= S,x[i])+xr[i]*sin(pi),
#                   subs(t=1,s= S,y[i])+yr[i]*cos(pi),pi=0..7],
                  [subs(t=1,s= 1,x[i])+xr[i]*sin(pi),
                   subs(t=1,s= 1,y[i])+yr[i]*cos(pi),pi=0..7],
                  [subs(t=1,s= 3,x[i])+xr[i]*sin(pi),
                   subs(t=1,s= 3,y[i])+yr[i]*cos(pi),pi=0..7]},
          S=0..2.4,color=red,numpoints=20,frames=200,axes=none,thickness=2):
Mov[i]:=animate({[subs(t=1,s= S,x[i])+xr[i]*sin(pi),
                 subs(t=1,s= S,y[i])+yr[i]*cos(pi),pi=0..7]},
          S=0..2.4,color=black,numpoints=20,frames=200,axes=none,thickness=2):
od:
plotsetup(gif,plotoutput=`collide-1.gif`,plotoptions=`height=400,width=400`);
display([Curve[1],Infl[1],Mov[1]],insequence=false);

plotsetup(gif,plotoutput=`collide-2.gif`,plotoptions=`height=400,width=400`);
display([Curve[2],Infl[2],Mov[2]],insequence=false);

plotsetup(gif,plotoutput=`collide-3.gif`,plotoptions=`height=400,width=400`);
display([Curve[3],Infl[3],Mov[3]],insequence=false);

plotsetup(gif,plotoutput=`collide-4.gif`,plotoptions=`height=400,width=400`);
display([Curve[4],Infl[4],Mov[4]],insequence=false);

plotsetup(gif,plotoutput=`collide-5.gif`,plotoptions=`height=400,width=400`);
display([Curve[5],Infl[5],Mov[5]],insequence=false);
time();
quit;


