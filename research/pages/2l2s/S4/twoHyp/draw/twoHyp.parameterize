#twoHyp.parameterize
#

############################################
#
Sphere := (a,b,c,r) ->
  linalg[matrix]([
   [a^2+b^2+c^2-r^2, -a, -b, -c],
   [      -a     , 1 , 0 , 0 ],
   [      -b     , 0 , 1 , 0 ],
   [      -c     , 0 , 0 , 1 ]]):

Wedge := proc(Sph)
local Pairs, i, j, wedge:
 wedge := linalg[matrix](6, 6, 0):
 Pairs := combinat[choose]([1,2,3,4],2):
 for i from 1 to 6 do
  for j from 1 to 6 do
   wedge[i,j] := linalg[det](linalg[submatrix](Sph,Pairs[i],Pairs[j])):
  od:
 od:
 evalm(wedge)
end:

Equation := proc(a,b,c,r)
local  plucker:
 plucker:=linalg[vector]([p01,p02,p03,p12,p13,p23]):
 linalg[innerprod](plucker,Wedge(Sphere(a,b,c,r)),plucker)
end:

Quadric := (a,b,c,d,e,f,g,h,x,y) ->
  linalg[matrix]([
   [ a , b , c , d ],
   [ b , e , f , g ],
   [ c , f , h , x ],
   [ d , g , x , y ]]):

##########################################
#  We assume that A = b = 1.
#  a is the function a(B) stored in aSOLS
#
TanPoint := proc(Q,B,a)
local Point, plugin, touch:
 Point:=linalg[vector]([1,B,t*a,t]):
 plugin:=linalg[innerprod](Point,Q,Point):
 touch:= expand(-coeff(plugin,t)/2/coeff(plugin,t^2)):
 [B, simplify(touch*a), touch]
end:
# [1,B,1,b]
#  B is the function B(b) stored in aSOLS
TanPointb := proc(Q,B,b)
local Point, plugin, touch:
 Point:=linalg[vector]([1,B,t,t*b]):
 plugin:=linalg[innerprod](Point,Q,Point):
 touch:= expand(-coeff(plugin,t)/2/coeff(plugin,t^2)):
 [B, simplify(touch), simplify(touch*b)]
end:

Coords:=linalg[vector]([1,X,Y,Z]):
plucker:=linalg[vector]([p01,p02,p03,p12,p13,p23]):

s2:=2^(1/2):

Hyp:=implicitplot3d(X^2+(Y-1)^2-Z^2-2,X=-3..3,Y=-3..3,Z=-3..3):
#
# This hyperboloid is very interesting:  All 12 components are real;
# the ideal factors over an extension of Z.
#
##################################################################

F:=subs(p02=a*A,p03=b*A,p12=a*B,p13=b*B,p01=0,p23=0,
    linalg[innerprod](plucker,Wedge(Quadric(-1,0,-1,0,1,0,0,1,0,-1)),plucker)):
G:=subs(b=1,A=1,F):
factor(G):
#implicitplot(G,B=-3..3,a=-3..3):

aSOLS:=[solve(subs(b=1,A=1,F)=0,a)]:
bSOLS:=[solve(subs(a=1,A=1,F)=0,B)]: 
#########################################################
# Family of initial hyperbola
#
#Ideal1:= [x,h+y,g,f,d,c^2+e*y,b,a+e]:
Family1:=Quadric(-1,0,c,0,1,0,0,c^2,0,-c^2):
linalg[innerprod](Coords,Family1,Coords)-
expand(X^2+(c*Y+1)^2-(c*Z)^2-2):
c:=1:
Hyp:=plot3d([s2*cos(th)+t*sin(th),
              (-s2*sin(th)+t*cos(th)-1)/c,t/c]
              ,t=-8*abs(c)..8*abs(c),th=-Pi..Pi,color=coral):

#c:=1:
#Hyp1:=plot3d([s2*cos(th)+t*sin(th),
#              (-s2*sin(th)+t*cos(th)-1)/c,t/c]
#             ,t=-8*abs(c)..8*abs(c),th=-Pi..Pi,color=tan):
TCa1:=TanPoint(Family1,B,aSOLS[1]):
TCa2:=TanPoint(Family1,B,aSOLS[2]):
TCa3:=TanPointb(Family1,bSOLS[1],b):
TCa4:=TanPointb(Family1,bSOLS[2],b):

#########################################################
#Ideal2:= [x,h+y,g,f,d^2+e*y,c,b,a+2*e]:
Family2:=Quadric(-2,0,0,d,1,0,0,d^2,0,-d^2):
linalg[innerprod](Coords,Family2,Coords)-
expand(X^2+(d*Y)^2-(d*Z-1)^2-1):
simplify(subs(X=cos(th)+t*sin(th),Y=(-sin(th)+t*cos(th))/d,Z=(t+1)/d,
X^2+(d*Y)^2-(d*Z-1)^2-1)):
d:=1:
Hyp2:=plot3d([cos(th)+t*sin(th),
              (-sin(th)+t*cos(th))/d,(t+1)/d]
              ,t=-8*abs(d)..8*abs(d),th=-Pi..Pi,color=tan):
TCb1:=TanPoint(Family2,B,aSOLS[1]):
TCb2:=TanPoint(Family2,B,aSOLS[2]):
TCb3:=TanPointb(Family2,bSOLS[1],b):
TCb4:=TanPointb(Family2,bSOLS[2],b):

#########################################################
#Ideal3:= [x,h+2*y,g,e*y+f^2,d,c,b,a+e]:
Family3:=Quadric(-1,0,0,0,1,f,0,2*f^2,0,-f^2):
linalg[innerprod](Coords,Family3,Coords)-
expand((X+f*Y)^2+(f*Y)^2-(f*Z)^2-1):
simplify(subs(X=cos(th)+sin(th)+t*sin(th)-t*cos(th),
         Y=(-sin(th)+t*cos(th))/f,Z=-t/f,
(X+f*Y)^2+(f*Y)^2-(f*Z)^2-1)):
f:=-1/2:
Hyp3:=plot3d([cos(th)+sin(th)+t*sin(th)-t*cos(th),
              (-sin(th)+t*cos(th))/f,-t/f]
              ,t=-8*abs(f)..8*abs(f),th=-Pi..Pi,color=tan):
TCc1:=TanPoint(Family3,B,aSOLS[1]):
TCc2:=TanPoint(Family3,B,aSOLS[2]):
TCc3:=TanPointb(Family3,bSOLS[1],b):
TCc4:=TanPointb(Family3,bSOLS[2],b):

#########################################################
#Ideal4:= [x,h+2*y,f,e*y+g^2,d,c,b,a+2*e]:
Family4:=Quadric(-2,0,0,0,1,0,g,2*g^2,0,-g^2):
linalg[innerprod](Coords,Family4,Coords)-
expand((X+g*Z)^2+(g*Y*s2)^2-(s2*g*Z)^2-2):
simplify(subs(X=s2*cos(th)+t*sin(th)+t/s2,
              Y=(-s2*sin(th)+t*cos(th))/g/s2,Z=-t/g/s2,
(X+g*Z)^2+(g*Y*s2)^2-(s2*g*Z)^2-2)):
#g:=1:
Hyp4:=plot3d([s2*cos(th)+t*sin(th)+t/s2,
              (-s2*sin(th)+t*cos(th))/g/s2,-t/g/s2]
              ,t=-8*abs(g)..8*abs(g),th=-Pi..Pi,color=tan):
TCd1:=TanPoint(Family4,B,aSOLS[1]):
TCd2:=TanPoint(Family4,B,aSOLS[2]):
######################################################################
######################################################################
#
#  First Extra component:  from ?????
#
#
Eqs:=[r^2*g^2+8*s-12, 2*a-r*s+r, 2*b+r*s*g-r*g, 
     2*c-r*s*g+r*g, 2*z^2-s+1, 2*y^2+29*s-41, 
     x+2*y*s+2*y, f^2-12*s+17, e-f, 4*d+12*f*r^2*s*g+17*f*r^2*g]:
r:=simplify([solve(Eqs[1]=0,r)][1]):   #  The solutions have same square
a:=solve(Eqs[2]=0,a):
b:=solve(Eqs[3]=0,b):
c:=solve(Eqs[4]=0,c):
z:=[solve(Eqs[5]=0,z)][1]:    #  The solutions have same square
y:=[solve(Eqs[6]=0,y)][1]:    #  The solutions have same square
x:=solve(Eqs[7]=0,x):
f:=[solve(Eqs[8]=0,f)][1]:    #  The solutions have same square
e:=solve(Eqs[9]=0,e):
d:=solve(Eqs[10]=0,d):

s:=2^(1/2):   # The `sister quadric to this has s:=-2^(1/2):
g:=8:
Family51:=Quadric(s*g^2, (1-s)*g^2/2, -g*s, -g,
           -g^2, -g, g, -2*(2+s), 1, 2*(1+s)):

A:=linalg[inverse](linalg[matrix]([
     [ r ,  0 ,  0 ,  0 ],
     [ a ,  d ,  0 ,  0 ], 
     [ b ,  e ,  x ,  0 ], 
     [ c ,  f ,  y ,  z ]])):

X:=solve(t*cos(th) + r*sin(th) = A[2,1] + A[2,2]*X, X):
Y:=solve(t*sin(th) - r*cos(th) = A[3,1] + A[3,2]*X + A[3,3]*Y, Y):
Z:=solve(t = A[4,1] + A[4,2]*X + A[4,3]*Y + A[4,4]*Z, Z):

Hyp51:=plot3d([X, Y, Z ],t=-8*abs(g)..8*abs(g),th=-Pi..Pi,color=tan):
TC511:=TanPoint(Family51,B,aSOLS[1]):
TC512:=TanPoint(Family51,B,aSOLS[2]):
#############################################################