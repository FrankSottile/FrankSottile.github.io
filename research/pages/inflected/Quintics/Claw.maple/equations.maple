#
#  Here are procedures for computing the equations
#
#  [1,s,s^2,  s^3,s^4  ,   s^5],
#  [0,1,2*s,3*s^2,4*s^3, 5*s^4],
#  [0,0, 1 ,3*s  ,6*s^2,10*s^3],
#  [0,0, 0 , 1   ,4*s  ,10*s^2],
#  [1,0, 0 , 0   ,  0  ,  0   ],
#  [0,1, 0 , 0   ,  0  ,  0   ],
#  [0,0, 0 , 1   ,  a  ,  b   ]]):    
#


TwoOneEq := proc(M,x)
#
#  Computes the equation of type 21
#
 [OneOneEq(M,x)[],TwoEq(M,x)[]]
end:

OneOneEq := proc(M,x)
#
#  Computes the equation of type 11
#
 local EQS, ROWS:
 EQS:=[]:
 for ROWS in combinat[choose]([1,2,3,4,5,6,7],6) do
  EQS:=[EQS[],subs(s=x,linalg[det](linalg[submatrix](M,ROWS,[1,2,3,4,5,6])))]:
 od:
 EQS
end:


OneOneOneEq := proc(BM,x)
#
#  Computes the equation of type 111
#
#  Takes a matrix with 8 rows !
#
 local EQS, ROWS:
 EQS:=[]:
 for ROWS in combinat[choose]([1,2,3,4,5,6,7,8],6) do
  EQS:=[EQS[],subs(s=x,linalg[det](linalg[submatrix](BM,ROWS,[1,2,3,4,5,6])))]:
 od:
 EQS
end:


TwoEq := proc(M,x)
#
#  Computes the equation of type 2
#
 local L, EQS, COLS:
 EQS:=[]:
 L:=linalg[submatrix](M,[1,2,5,6,7],[1,2,3,4,5,6]):
 for COLS in combinat[choose]([1,2,3,4,5,6],5) do
  EQS:=[EQS[],subs(s=x,linalg[det](linalg[submatrix](L,[1,2,3,4,5],COLS)))]:
 od:
 EQS
end:


OneEq := proc(M,x)
#
#  Computes the equation of codimension 1
#
 subs(s=x,linalg[det](linalg[submatrix](M,[1,2,3,5,6,7],[1,2,3,4,5,6])))
end:

