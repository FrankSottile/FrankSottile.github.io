##########################################################################
#33.maple                                                                #
#                                                                        #
#   This MAPLE code is designed to set up and run a single instance      #
#   of Shapiro's conjecture concerning real enumerative goemetry.        #
#                                                                        #
#   It treats the enumerative problem of 9 codimension 1 Schubert        #
#   hypersurfaces in G_{3,3}, each defined by a 3-plane.                 #
#   There are 42 3-planes meeting 9 fixed 3-planes in C^6.               #
#                                                                        #
#    Computing drl Gr\"obner basis  (SINGULAR)  1.50   seconds           #
#	                                                                 # 
##########################################################################
interface(quiet=true):

Eq := s -> linalg[det](linalg[matrix]([
[s^5, 5*s^4,10*s^3, g , h , x],
[s^4, 4*s^3, 6*s^2, d , e , f],
[s^3, 3*s^2, 3*s  , a , b , c],
[s^2, 2*s  ,  1   , 0 , 0 , 1],
[s  ,  1   ,  0   , 0 , 1 , 0],
[1  ,  0   ,  0   , 1 , 0 , 0]])):



eqs:=[]:
for i from 1 to 9 do eqs:=[eqs[],Eq(i)]: od:

lprint(`//Execute this with:`);
lprint(`//Singular --ticks-per-sec=100<33.sing`);
lprint(`//`);
lprint(`//ring R= 0, (a,b,c,d,e,f,g,h,x), dp;`);
lprint(`//`);
lprint(`timer=1;`);
lprint(`//`);
lprint(`ring R= 0, (a,b,c,d,e,f,g,h,x), dp;`);
lprint(`ideal I=`);
for i from 1 to 9 do  
lprint(eqs[i],`,`);  od:
lprint(`0;`);
lprint(`int t=timer;`);
lprint(`ideal G = std(I);`);
lprint(`int s=timer-t;`);
lprint(`print("Time to compute one drl Groebner bases: "); `);
lprint(`s;`);
lprint(`print("Time units, counts per second:");`);
lprint(`system("--ticks-per-sec");`);
lprint(`degree(G);`);
lprint(`ncols(G);`);
lprint(`print(G);`);
lprint(`quit;`);
quit;
