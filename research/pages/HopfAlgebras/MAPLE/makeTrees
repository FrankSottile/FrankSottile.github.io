#makeTrees
#
# Makes the file of maximal permutations representing a tree
#
read(LodayProcedures):
####################################

file:=fopen(`Trees`,WRITE):

E:=[6,6,5,4,3,3,3,3,2,2]:


for n from 1 to 8 do
fprintf(file,`###################################`):
fprintf(file,`###################################\n`):
fprintf(file,cat(`#           Trees of degree `,n,`\n`)):
fprintf(file,cat(`Trees[`,n,`]:=[`)):
 Trees:=[]:
 for w in combinat[permute](n) do
  if isTree(w) then Trees:=[Trees[],w]: fi:
 od:
 for j from 1 to nops(Trees) do
  fprintf(file,convert(Trees[j],symbol)):
  if j<>nops(Trees) then  
    fprintf(file,`, `):
   else
    fprintf(file,`]:\n`):
  fi:
  if (j mod E[n] = 0) and j<>nops(Trees) then fprintf(file,`\n           `): fi:
 od:
od:
fprintf(file,`###################################`):
fprintf(file,`###################################\n`):
fclose(file):